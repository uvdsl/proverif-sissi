File "sissi_multiparty_agreement.pv", line 182, characters 9-11:
Warning: identifier msg rebound.
File "sissi_multiparty_agreement.pv", line 188, characters 9-11:
Warning: identifier msg rebound.
File "sissi_multiparty_agreement.pv", line 198, character 10:
Warning: identifier x rebound.
File "sissi_multiparty_agreement.pv", line 201, characters 9-11:
Warning: identifier msg rebound.
File "sissi_multiparty_agreement.pv", line 225, character 10:
Warning: identifier x rebound.
File "sissi_multiparty_agreement.pv", line 274, characters 9-11:
Warning: identifier msg rebound.
File "sissi_multiparty_agreement.pv", line 284, character 10:
Warning: identifier x rebound.
File "sissi_multiparty_agreement.pv", line 287, characters 9-11:
Warning: identifier msg rebound.
File "sissi_multiparty_agreement.pv", line 297, characters 9-11:
Warning: identifier msg rebound.
File "sissi_multiparty_agreement.pv", line 307, character 10:
Warning: identifier x rebound.
File "sissi_multiparty_agreement.pv", line 343, characters 9-11:
Warning: identifier msg rebound.
File "sissi_multiparty_agreement.pv", line 401, characters 9-11:
Warning: identifier msg rebound.
File "sissi_multiparty_agreement.pv", line 407, characters 9-11:
Warning: identifier msg rebound.
File "sissi_multiparty_agreement.pv", line 420, character 10:
Warning: identifier x rebound.
File "sissi_multiparty_agreement.pv", line 480, character 10:
Warning: identifier x rebound.
File "sissi_multiparty_agreement.pv", line 483, characters 9-11:
Warning: identifier msg rebound.
File "sissi_multiparty_agreement.pv", line 501, characters 9-11:
Warning: identifier msg rebound.
Process 0 (that is, the initial process):
{1}new sk_prover: SecretKey;
{2}new sk_verifier: SecretKey;
{3}new sk_issuer: SecretKey;
{4}out(h, pk(sk_issuer));
{5}out(h, pk(sk_verifier));
{6}out(h, pk(sk_prover));
{7}out(h, genDID(pk(sk_prover),sk_prover));
{8}out(h, genDID(pk(sk_verifier),sk_verifier));
{9}out(h, genDID(pk(sk_issuer),sk_issuer));
{10}let acr: ACR = makeRule(genDID(pk(sk_prover),sk_prover),attr,genDID(pk(sk_issuer),sk_issuer)) in
{11}let acr_otherAgent: ACR = makeRule(genDID(pk(sk_otherAgent),sk_otherAgent),attr,genDID(pk(sk_issuer),sk_issuer)) in
{12}let acr_compromisedIssuer: ACR = makeRule(genDID(pk(sk_prover),sk_prover),attr,genDID(pk(sk_otherAgent),sk_otherAgent)) in
{13}let acr_compromised: ACR = makeRule(genDID(pk(sk_otherAgent),sk_otherAgent),attr,genDID(pk(sk_otherAgent),sk_otherAgent)) in
(
    {14}!
    {15}let sk: SecretKey = sk_issuer in
    {16}let attr_1: bitstring = attr in
    {17}let expectedDID: DID = genDID(pk(sk_prover),sk_prover) in
    {18}let talksOnlyToHonest: bool = true in
    {19}in(h, x: bitstring);
    {20}let msg_handshakeReq: bitstring = x in
    {21}let sgndMsg: bitstring = adec(x,sk) in
    {22}let (unauth_n_p: bitstring,unauth_spk_p: PublicKey) = getMsg(sgndMsg) in
    {23}let (n_p: bitstring,spk_p: PublicKey) = auth(sgndMsg,unauth_spk_p) in
    {24}new ssk: SecretKey;
    {25}new n_i: bitstring;
    {26}let msg: bitstring = (n_p,n_i,pk(ssk)) in
    {27}let msg_handshakeResp: bitstring = aenc(sign(msg,sk),spk_p) in
    {28}out(h, msg_handshakeResp);
    {29}in(h, x_1: bitstring);
    {30}let msg_did: bitstring = x_1 in
    {31}let sk_1: SecretKey = ssk in
    {32}let msg_1: bitstring = auth(adec(x_1,sk_1),spk_p) in
    {33}let (unauth_n'_i: bitstring,unauth_proverDID: DID,unauth_recipientDID: DID) = getMsg(msg_1) in
    {34}let pk_p: PublicKey = getPubKey(unauth_proverDID) in
    {35}let (n'_i: bitstring,proverDID: DID,recipientDID: DID) = auth(msg_1,pk_p) in
    {36}if (proverDID = expectedDID) then
    {37}if (n'_i = n_i) then
    {38}if (recipientDID = genDID(pk(sk),sk)) then
    {39}let cred: AC = issueAC(attr_1,sk) in
    {40}let msg_2: bitstring = (cred,proverDID) in
    {41}let sk_2: SecretKey = ssk in
    {42}let msg_cred: bitstring = aenc(sign(msg_2,sk_2),spk_p) in
    {43}event auth_IssuerSendsLastMessageToHolder(msg_handshakeReq,msg_handshakeResp,msg_did,msg_cred);
    {44}out(h, msg_cred);
    {45}if talksOnlyToHonest then
    (
        {46}event auth_IssuerCompletesProtocol(msg_handshakeReq,msg_handshakeResp,msg_did)
    ) | (
        {47}out(ch(n_p), n_p_fromIssuer)
    ) | (
        {48}out(chA(cred), cred_fromIssuer)
    ) | (
        {49}out(ch((cred,proverDID)), credIssuing_fromIssuer_notMeaningful)
    )
) | (
    {50}!
    {51}let sk_3: SecretKey = sk_issuer in
    {52}let attr_3: bitstring = attr_2 in
    {53}let expectedDID_1: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
    {54}let talksOnlyToHonest_1: bool = false in
    {55}in(h, x_2: bitstring);
    {56}let msg_handshakeReq_1: bitstring = x_2 in
    {57}let sgndMsg_1: bitstring = adec(x_2,sk_3) in
    {58}let (unauth_n_p_1: bitstring,unauth_spk_p_1: PublicKey) = getMsg(sgndMsg_1) in
    {59}let (n_p_1: bitstring,spk_p_1: PublicKey) = auth(sgndMsg_1,unauth_spk_p_1) in
    {60}new ssk_1: SecretKey;
    {61}new n_i_1: bitstring;
    {62}let msg_3: bitstring = (n_p_1,n_i_1,pk(ssk_1)) in
    {63}let msg_handshakeResp_1: bitstring = aenc(sign(msg_3,sk_3),spk_p_1) in
    {64}out(h, msg_handshakeResp_1);
    {65}in(h, x_3: bitstring);
    {66}let msg_did_1: bitstring = x_3 in
    {67}let sk_4: SecretKey = ssk_1 in
    {68}let msg_4: bitstring = auth(adec(x_3,sk_4),spk_p_1) in
    {69}let (unauth_n'_i_1: bitstring,unauth_proverDID_1: DID,unauth_recipientDID_1: DID) = getMsg(msg_4) in
    {70}let pk_p_1: PublicKey = getPubKey(unauth_proverDID_1) in
    {71}let (n'_i_1: bitstring,proverDID_1: DID,recipientDID_1: DID) = auth(msg_4,pk_p_1) in
    {72}if (proverDID_1 = expectedDID_1) then
    {73}if (n'_i_1 = n_i_1) then
    {74}if (recipientDID_1 = genDID(pk(sk_3),sk_3)) then
    {75}let cred_1: AC = issueAC(attr_3,sk_3) in
    {76}let msg_5: bitstring = (cred_1,proverDID_1) in
    {77}let sk_5: SecretKey = ssk_1 in
    {78}let msg_cred_1: bitstring = aenc(sign(msg_5,sk_5),spk_p_1) in
    {79}event auth_IssuerSendsLastMessageToHolder(msg_handshakeReq_1,msg_handshakeResp_1,msg_did_1,msg_cred_1);
    {80}out(h, msg_cred_1);
    {81}if talksOnlyToHonest_1 then
    (
        {82}event auth_IssuerCompletesProtocol(msg_handshakeReq_1,msg_handshakeResp_1,msg_did_1)
    ) | (
        {83}out(ch(n_p_1), n_p_fromIssuer)
    ) | (
        {84}out(chA(cred_1), cred_fromIssuer)
    ) | (
        {85}out(ch((cred_1,proverDID_1)), credIssuing_fromIssuer_notMeaningful)
    )
) | (
    {86}!
    {87}let sk_6: SecretKey = sk_prover in
    {88}let issuerDID: DID = genDID(pk(sk_issuer),sk_issuer) in
    {89}let verifierDID: DID = genDID(pk(sk_verifier),sk_verifier) in
    {90}let talksOnlyToHonest_2: bool = true in
    {91}let pk_i: PublicKey = getPubKey(issuerDID) in
    {92}new ssk_2: SecretKey;
    {93}new n_p_2: bitstring;
    {94}let msg_6: bitstring = (n_p_2,pk(ssk_2)) in
    {95}let sk_7: SecretKey = ssk_2 in
    {96}let msg_handshakeReq_2: bitstring = aenc(sign(msg_6,sk_7),pk_i) in
    {97}out(h, msg_handshakeReq_2);
    {98}in(h, x_4: bitstring);
    {99}let msg_handshakeResp_2: bitstring = x_4 in
    {100}let sk_8: SecretKey = ssk_2 in
    {101}let msg_7: bitstring = auth(adec(x_4,sk_8),pk_i) in
    {102}let (n'_p: bitstring,n_i_2: bitstring,spk_i: PublicKey) = msg_7 in
    {103}if (n'_p = n_p_2) then
    {104}let msg_8: bitstring = sign((n_i_2,genDID(pk(sk_6),sk_6),issuerDID),sk_6) in
    {105}let sk_9: SecretKey = ssk_2 in
    {106}let msg_did_2: bitstring = aenc(sign(msg_8,sk_9),spk_i) in
    {107}event auth_HolderSendsLastMessageToIssuer(msg_handshakeReq_2,msg_handshakeResp_2,msg_did_2);
    {108}out(h, msg_did_2);
    {109}in(h, x_5: bitstring);
    {110}let msg_credential: bitstring = x_5 in
    {111}let sk_10: SecretKey = ssk_2 in
    {112}let (credential: AC,recipientDID_2: DID) = auth(adec(x_5,sk_10),spk_i) in
    {113}if (recipientDID_2 = genDID(pk(sk_6),sk_6)) then
    {114}if (getIssuerFromAC(credential) = issuerDID) then
    (
        {115}!
        {116}let pk_v: PublicKey = getPubKey(verifierDID) in
        {117}new ssk_3: SecretKey;
        {118}new n_p_3: bitstring;
        {119}let msg_9: bitstring = (n_p_3,pk(ssk_3)) in
        {120}let sk_11: SecretKey = ssk_3 in
        {121}let msg_handshakeReq_3: bitstring = aenc(sign(msg_9,sk_11),pk_v) in
        {122}out(h, msg_handshakeReq_3);
        {123}in(h, x_6: bitstring);
        {124}let msg_handshakeResp_3: bitstring = x_6 in
        {125}let sk_12: SecretKey = ssk_3 in
        {126}let msg_10: bitstring = auth(adec(x_6,sk_12),pk_v) in
        {127}let (n'_p_1: bitstring,n_v: bitstring,spk_v: PublicKey) = msg_10 in
        {128}if (n'_p_1 = n_p_3) then
        {129}let msg_11: bitstring = (n_v,uri) in
        {130}let sk_13: SecretKey = ssk_3 in
        {131}let msg_uri: bitstring = aenc(sign(msg_11,sk_13),spk_v) in
        {132}out(h, msg_uri);
        {133}in(h, x_7: bitstring);
        {134}let msg_rule: bitstring = x_7 in
        {135}let sk_14: SecretKey = ssk_3 in
        {136}let msg_12: bitstring = auth(adec(x_7,sk_14),spk_v) in
        {137}let (n_c: bitstring,rule: ACR) = msg_12 in
        {138}let issuerPk: PublicKey = getPubKey(getIssuerFromAC(credential)) in
        {139}let ph: bitstring = (n_c,verifierDID,n_p_3) in
        {140}let dc: DC = proofGen(credential,issuerPk,ph) in
        {141}let vp: bitstring = encodeDC(dc) in
        {142}let sk_15: SecretKey = ssk_3 in
        {143}let msg_vp: bitstring = aenc(sign(vp,sk_15),spk_v) in
        {144}event auth_ProverSendsLastMessageToVerifier(msg_handshakeReq_3,msg_handshakeResp_3,msg_uri,msg_rule,msg_vp);
        {145}event auth_ProverSendsLastMessageToVerifierInProtocolFull(msg_handshakeReq_2,msg_handshakeResp_2,msg_did_2,msg_credential,msg_handshakeReq_3,msg_handshakeResp_3,msg_uri,msg_rule,msg_vp);
        {146}out(h, msg_vp);
        {147}in(h, x_8: bitstring);
        {148}let msg_accessToken: bitstring = x_8 in
        {149}let sk_16: SecretKey = ssk_3 in
        {150}let access_token: bitstring = auth(adec(x_8,sk_16),spk_v) in
        {151}if talksOnlyToHonest_2 then
        (
            {152}event auth_ProverCompletesProtocol(msg_handshakeReq_3,msg_handshakeResp_3,msg_uri,msg_rule,msg_vp,msg_accessToken)
        ) | (
            {153}out(ch(n_p_3), n_p_fromProver)
        ) | (
            {154}out(chR(rule), rule_fromProver)
        ) | (
            {155}out(ch((n_c,verifierDID,credential)), unsigned_vp_fromProver)
        ) | (
            {156}out(ch(vp), vp_fromProver)
        ) | (
            {157}out(chA(credential), cred_fromProver)
        ) | (
            {158}out(ch(access_token), access_token_fromProver)
        )
    ) | (
        {159}if talksOnlyToHonest_2 then
        (
            {160}event auth_HolderCompletesProtocol(msg_handshakeReq_2,msg_handshakeResp_2,msg_did_2,msg_credential)
        ) | (
            {161}out(ch(n_p_2), n_p_fromHolder)
        ) | (
            {162}out(ch(n_i_2), n_i_fromHolder)
        ) | (
            {163}out(ch((n_i_2,genDID(pk(sk_6),sk_6),issuerDID)), providingDID_fromHolder)
        ) | (
            {164}out(chA(credential), cred_fromHolder)
        )
    )
) | (
    {165}!
    {166}let sk_17: SecretKey = sk_prover in
    {167}let issuerDID_1: DID = genDID(pk(sk_issuer),sk_issuer) in
    {168}let verifierDID_1: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
    {169}let talksOnlyToHonest_3: bool = false in
    {170}let pk_i_1: PublicKey = getPubKey(issuerDID_1) in
    {171}new ssk_4: SecretKey;
    {172}new n_p_4: bitstring;
    {173}let msg_13: bitstring = (n_p_4,pk(ssk_4)) in
    {174}let sk_18: SecretKey = ssk_4 in
    {175}let msg_handshakeReq_4: bitstring = aenc(sign(msg_13,sk_18),pk_i_1) in
    {176}out(h, msg_handshakeReq_4);
    {177}in(h, x_9: bitstring);
    {178}let msg_handshakeResp_4: bitstring = x_9 in
    {179}let sk_19: SecretKey = ssk_4 in
    {180}let msg_14: bitstring = auth(adec(x_9,sk_19),pk_i_1) in
    {181}let (n'_p_2: bitstring,n_i_3: bitstring,spk_i_1: PublicKey) = msg_14 in
    {182}if (n'_p_2 = n_p_4) then
    {183}let msg_15: bitstring = sign((n_i_3,genDID(pk(sk_17),sk_17),issuerDID_1),sk_17) in
    {184}let sk_20: SecretKey = ssk_4 in
    {185}let msg_did_3: bitstring = aenc(sign(msg_15,sk_20),spk_i_1) in
    {186}event auth_HolderSendsLastMessageToIssuer(msg_handshakeReq_4,msg_handshakeResp_4,msg_did_3);
    {187}out(h, msg_did_3);
    {188}in(h, x_10: bitstring);
    {189}let msg_credential_1: bitstring = x_10 in
    {190}let sk_21: SecretKey = ssk_4 in
    {191}let (credential_1: AC,recipientDID_3: DID) = auth(adec(x_10,sk_21),spk_i_1) in
    {192}if (recipientDID_3 = genDID(pk(sk_17),sk_17)) then
    {193}if (getIssuerFromAC(credential_1) = issuerDID_1) then
    (
        {194}!
        {195}let pk_v_1: PublicKey = getPubKey(verifierDID_1) in
        {196}new ssk_5: SecretKey;
        {197}new n_p_5: bitstring;
        {198}let msg_16: bitstring = (n_p_5,pk(ssk_5)) in
        {199}let sk_22: SecretKey = ssk_5 in
        {200}let msg_handshakeReq_5: bitstring = aenc(sign(msg_16,sk_22),pk_v_1) in
        {201}out(h, msg_handshakeReq_5);
        {202}in(h, x_11: bitstring);
        {203}let msg_handshakeResp_5: bitstring = x_11 in
        {204}let sk_23: SecretKey = ssk_5 in
        {205}let msg_17: bitstring = auth(adec(x_11,sk_23),pk_v_1) in
        {206}let (n'_p_3: bitstring,n_v_1: bitstring,spk_v_1: PublicKey) = msg_17 in
        {207}if (n'_p_3 = n_p_5) then
        {208}let msg_18: bitstring = (n_v_1,uri) in
        {209}let sk_24: SecretKey = ssk_5 in
        {210}let msg_uri_1: bitstring = aenc(sign(msg_18,sk_24),spk_v_1) in
        {211}out(h, msg_uri_1);
        {212}in(h, x_12: bitstring);
        {213}let msg_rule_1: bitstring = x_12 in
        {214}let sk_25: SecretKey = ssk_5 in
        {215}let msg_19: bitstring = auth(adec(x_12,sk_25),spk_v_1) in
        {216}let (n_c_1: bitstring,rule_1: ACR) = msg_19 in
        {217}let issuerPk_1: PublicKey = getPubKey(getIssuerFromAC(credential_1)) in
        {218}let ph_1: bitstring = (n_c_1,verifierDID_1,n_p_5) in
        {219}let dc_1: DC = proofGen(credential_1,issuerPk_1,ph_1) in
        {220}let vp_1: bitstring = encodeDC(dc_1) in
        {221}let sk_26: SecretKey = ssk_5 in
        {222}let msg_vp_1: bitstring = aenc(sign(vp_1,sk_26),spk_v_1) in
        {223}event auth_ProverSendsLastMessageToVerifier(msg_handshakeReq_5,msg_handshakeResp_5,msg_uri_1,msg_rule_1,msg_vp_1);
        {224}event auth_ProverSendsLastMessageToVerifierInProtocolFull(msg_handshakeReq_4,msg_handshakeResp_4,msg_did_3,msg_credential_1,msg_handshakeReq_5,msg_handshakeResp_5,msg_uri_1,msg_rule_1,msg_vp_1);
        {225}out(h, msg_vp_1);
        {226}in(h, x_13: bitstring);
        {227}let msg_accessToken_1: bitstring = x_13 in
        {228}let sk_27: SecretKey = ssk_5 in
        {229}let access_token_1: bitstring = auth(adec(x_13,sk_27),spk_v_1) in
        {230}if talksOnlyToHonest_3 then
        (
            {231}event auth_ProverCompletesProtocol(msg_handshakeReq_5,msg_handshakeResp_5,msg_uri_1,msg_rule_1,msg_vp_1,msg_accessToken_1)
        ) | (
            {232}out(ch(n_p_5), n_p_fromProver)
        ) | (
            {233}out(chR(rule_1), rule_fromProver)
        ) | (
            {234}out(ch((n_c_1,verifierDID_1,credential_1)), unsigned_vp_fromProver)
        ) | (
            {235}out(ch(vp_1), vp_fromProver)
        ) | (
            {236}out(chA(credential_1), cred_fromProver)
        ) | (
            {237}out(ch(access_token_1), access_token_fromProver)
        )
    ) | (
        {238}if talksOnlyToHonest_3 then
        (
            {239}event auth_HolderCompletesProtocol(msg_handshakeReq_4,msg_handshakeResp_4,msg_did_3,msg_credential_1)
        ) | (
            {240}out(ch(n_p_4), n_p_fromHolder)
        ) | (
            {241}out(ch(n_i_3), n_i_fromHolder)
        ) | (
            {242}out(ch((n_i_3,genDID(pk(sk_17),sk_17),issuerDID_1)), providingDID_fromHolder)
        ) | (
            {243}out(chA(credential_1), cred_fromHolder)
        )
    )
) | (
    {244}!
    {245}let sk_28: SecretKey = sk_prover in
    {246}let issuerDID_2: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
    {247}let verifierDID_2: DID = genDID(pk(sk_verifier),sk_verifier) in
    {248}let talksOnlyToHonest_4: bool = false in
    {249}let pk_i_2: PublicKey = getPubKey(issuerDID_2) in
    {250}new ssk_6: SecretKey;
    {251}new n_p_6: bitstring;
    {252}let msg_20: bitstring = (n_p_6,pk(ssk_6)) in
    {253}let sk_29: SecretKey = ssk_6 in
    {254}let msg_handshakeReq_6: bitstring = aenc(sign(msg_20,sk_29),pk_i_2) in
    {255}out(h, msg_handshakeReq_6);
    {256}in(h, x_14: bitstring);
    {257}let msg_handshakeResp_6: bitstring = x_14 in
    {258}let sk_30: SecretKey = ssk_6 in
    {259}let msg_21: bitstring = auth(adec(x_14,sk_30),pk_i_2) in
    {260}let (n'_p_4: bitstring,n_i_4: bitstring,spk_i_2: PublicKey) = msg_21 in
    {261}if (n'_p_4 = n_p_6) then
    {262}let msg_22: bitstring = sign((n_i_4,genDID(pk(sk_28),sk_28),issuerDID_2),sk_28) in
    {263}let sk_31: SecretKey = ssk_6 in
    {264}let msg_did_4: bitstring = aenc(sign(msg_22,sk_31),spk_i_2) in
    {265}event auth_HolderSendsLastMessageToIssuer(msg_handshakeReq_6,msg_handshakeResp_6,msg_did_4);
    {266}out(h, msg_did_4);
    {267}in(h, x_15: bitstring);
    {268}let msg_credential_2: bitstring = x_15 in
    {269}let sk_32: SecretKey = ssk_6 in
    {270}let (credential_2: AC,recipientDID_4: DID) = auth(adec(x_15,sk_32),spk_i_2) in
    {271}if (recipientDID_4 = genDID(pk(sk_28),sk_28)) then
    {272}if (getIssuerFromAC(credential_2) = issuerDID_2) then
    (
        {273}!
        {274}let pk_v_2: PublicKey = getPubKey(verifierDID_2) in
        {275}new ssk_7: SecretKey;
        {276}new n_p_7: bitstring;
        {277}let msg_23: bitstring = (n_p_7,pk(ssk_7)) in
        {278}let sk_33: SecretKey = ssk_7 in
        {279}let msg_handshakeReq_7: bitstring = aenc(sign(msg_23,sk_33),pk_v_2) in
        {280}out(h, msg_handshakeReq_7);
        {281}in(h, x_16: bitstring);
        {282}let msg_handshakeResp_7: bitstring = x_16 in
        {283}let sk_34: SecretKey = ssk_7 in
        {284}let msg_24: bitstring = auth(adec(x_16,sk_34),pk_v_2) in
        {285}let (n'_p_5: bitstring,n_v_2: bitstring,spk_v_2: PublicKey) = msg_24 in
        {286}if (n'_p_5 = n_p_7) then
        {287}let msg_25: bitstring = (n_v_2,uri) in
        {288}let sk_35: SecretKey = ssk_7 in
        {289}let msg_uri_2: bitstring = aenc(sign(msg_25,sk_35),spk_v_2) in
        {290}out(h, msg_uri_2);
        {291}in(h, x_17: bitstring);
        {292}let msg_rule_2: bitstring = x_17 in
        {293}let sk_36: SecretKey = ssk_7 in
        {294}let msg_26: bitstring = auth(adec(x_17,sk_36),spk_v_2) in
        {295}let (n_c_2: bitstring,rule_2: ACR) = msg_26 in
        {296}let issuerPk_2: PublicKey = getPubKey(getIssuerFromAC(credential_2)) in
        {297}let ph_2: bitstring = (n_c_2,verifierDID_2,n_p_7) in
        {298}let dc_2: DC = proofGen(credential_2,issuerPk_2,ph_2) in
        {299}let vp_2: bitstring = encodeDC(dc_2) in
        {300}let sk_37: SecretKey = ssk_7 in
        {301}let msg_vp_2: bitstring = aenc(sign(vp_2,sk_37),spk_v_2) in
        {302}event auth_ProverSendsLastMessageToVerifier(msg_handshakeReq_7,msg_handshakeResp_7,msg_uri_2,msg_rule_2,msg_vp_2);
        {303}event auth_ProverSendsLastMessageToVerifierInProtocolFull(msg_handshakeReq_6,msg_handshakeResp_6,msg_did_4,msg_credential_2,msg_handshakeReq_7,msg_handshakeResp_7,msg_uri_2,msg_rule_2,msg_vp_2);
        {304}out(h, msg_vp_2);
        {305}in(h, x_18: bitstring);
        {306}let msg_accessToken_2: bitstring = x_18 in
        {307}let sk_38: SecretKey = ssk_7 in
        {308}let access_token_2: bitstring = auth(adec(x_18,sk_38),spk_v_2) in
        {309}if talksOnlyToHonest_4 then
        (
            {310}event auth_ProverCompletesProtocol(msg_handshakeReq_7,msg_handshakeResp_7,msg_uri_2,msg_rule_2,msg_vp_2,msg_accessToken_2)
        ) | (
            {311}out(ch(n_p_7), n_p_fromProver)
        ) | (
            {312}out(chR(rule_2), rule_fromProver)
        ) | (
            {313}out(ch((n_c_2,verifierDID_2,credential_2)), unsigned_vp_fromProver)
        ) | (
            {314}out(ch(vp_2), vp_fromProver)
        ) | (
            {315}out(chA(credential_2), cred_fromProver)
        ) | (
            {316}out(ch(access_token_2), access_token_fromProver)
        )
    ) | (
        {317}if talksOnlyToHonest_4 then
        (
            {318}event auth_HolderCompletesProtocol(msg_handshakeReq_6,msg_handshakeResp_6,msg_did_4,msg_credential_2)
        ) | (
            {319}out(ch(n_p_6), n_p_fromHolder)
        ) | (
            {320}out(ch(n_i_4), n_i_fromHolder)
        ) | (
            {321}out(ch((n_i_4,genDID(pk(sk_28),sk_28),issuerDID_2)), providingDID_fromHolder)
        ) | (
            {322}out(chA(credential_2), cred_fromHolder)
        )
    )
) | (
    {323}!
    {324}let sk_39: SecretKey = sk_prover in
    {325}let issuerDID_3: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
    {326}let verifierDID_3: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
    {327}let talksOnlyToHonest_5: bool = false in
    {328}let pk_i_3: PublicKey = getPubKey(issuerDID_3) in
    {329}new ssk_8: SecretKey;
    {330}new n_p_8: bitstring;
    {331}let msg_27: bitstring = (n_p_8,pk(ssk_8)) in
    {332}let sk_40: SecretKey = ssk_8 in
    {333}let msg_handshakeReq_8: bitstring = aenc(sign(msg_27,sk_40),pk_i_3) in
    {334}out(h, msg_handshakeReq_8);
    {335}in(h, x_19: bitstring);
    {336}let msg_handshakeResp_8: bitstring = x_19 in
    {337}let sk_41: SecretKey = ssk_8 in
    {338}let msg_28: bitstring = auth(adec(x_19,sk_41),pk_i_3) in
    {339}let (n'_p_6: bitstring,n_i_5: bitstring,spk_i_3: PublicKey) = msg_28 in
    {340}if (n'_p_6 = n_p_8) then
    {341}let msg_29: bitstring = sign((n_i_5,genDID(pk(sk_39),sk_39),issuerDID_3),sk_39) in
    {342}let sk_42: SecretKey = ssk_8 in
    {343}let msg_did_5: bitstring = aenc(sign(msg_29,sk_42),spk_i_3) in
    {344}event auth_HolderSendsLastMessageToIssuer(msg_handshakeReq_8,msg_handshakeResp_8,msg_did_5);
    {345}out(h, msg_did_5);
    {346}in(h, x_20: bitstring);
    {347}let msg_credential_3: bitstring = x_20 in
    {348}let sk_43: SecretKey = ssk_8 in
    {349}let (credential_3: AC,recipientDID_5: DID) = auth(adec(x_20,sk_43),spk_i_3) in
    {350}if (recipientDID_5 = genDID(pk(sk_39),sk_39)) then
    {351}if (getIssuerFromAC(credential_3) = issuerDID_3) then
    (
        {352}!
        {353}let pk_v_3: PublicKey = getPubKey(verifierDID_3) in
        {354}new ssk_9: SecretKey;
        {355}new n_p_9: bitstring;
        {356}let msg_30: bitstring = (n_p_9,pk(ssk_9)) in
        {357}let sk_44: SecretKey = ssk_9 in
        {358}let msg_handshakeReq_9: bitstring = aenc(sign(msg_30,sk_44),pk_v_3) in
        {359}out(h, msg_handshakeReq_9);
        {360}in(h, x_21: bitstring);
        {361}let msg_handshakeResp_9: bitstring = x_21 in
        {362}let sk_45: SecretKey = ssk_9 in
        {363}let msg_31: bitstring = auth(adec(x_21,sk_45),pk_v_3) in
        {364}let (n'_p_7: bitstring,n_v_3: bitstring,spk_v_3: PublicKey) = msg_31 in
        {365}if (n'_p_7 = n_p_9) then
        {366}let msg_32: bitstring = (n_v_3,uri) in
        {367}let sk_46: SecretKey = ssk_9 in
        {368}let msg_uri_3: bitstring = aenc(sign(msg_32,sk_46),spk_v_3) in
        {369}out(h, msg_uri_3);
        {370}in(h, x_22: bitstring);
        {371}let msg_rule_3: bitstring = x_22 in
        {372}let sk_47: SecretKey = ssk_9 in
        {373}let msg_33: bitstring = auth(adec(x_22,sk_47),spk_v_3) in
        {374}let (n_c_3: bitstring,rule_3: ACR) = msg_33 in
        {375}let issuerPk_3: PublicKey = getPubKey(getIssuerFromAC(credential_3)) in
        {376}let ph_3: bitstring = (n_c_3,verifierDID_3,n_p_9) in
        {377}let dc_3: DC = proofGen(credential_3,issuerPk_3,ph_3) in
        {378}let vp_3: bitstring = encodeDC(dc_3) in
        {379}let sk_48: SecretKey = ssk_9 in
        {380}let msg_vp_3: bitstring = aenc(sign(vp_3,sk_48),spk_v_3) in
        {381}event auth_ProverSendsLastMessageToVerifier(msg_handshakeReq_9,msg_handshakeResp_9,msg_uri_3,msg_rule_3,msg_vp_3);
        {382}event auth_ProverSendsLastMessageToVerifierInProtocolFull(msg_handshakeReq_8,msg_handshakeResp_8,msg_did_5,msg_credential_3,msg_handshakeReq_9,msg_handshakeResp_9,msg_uri_3,msg_rule_3,msg_vp_3);
        {383}out(h, msg_vp_3);
        {384}in(h, x_23: bitstring);
        {385}let msg_accessToken_3: bitstring = x_23 in
        {386}let sk_49: SecretKey = ssk_9 in
        {387}let access_token_3: bitstring = auth(adec(x_23,sk_49),spk_v_3) in
        {388}if talksOnlyToHonest_5 then
        (
            {389}event auth_ProverCompletesProtocol(msg_handshakeReq_9,msg_handshakeResp_9,msg_uri_3,msg_rule_3,msg_vp_3,msg_accessToken_3)
        ) | (
            {390}out(ch(n_p_9), n_p_fromProver)
        ) | (
            {391}out(chR(rule_3), rule_fromProver)
        ) | (
            {392}out(ch((n_c_3,verifierDID_3,credential_3)), unsigned_vp_fromProver)
        ) | (
            {393}out(ch(vp_3), vp_fromProver)
        ) | (
            {394}out(chA(credential_3), cred_fromProver)
        ) | (
            {395}out(ch(access_token_3), access_token_fromProver)
        )
    ) | (
        {396}if talksOnlyToHonest_5 then
        (
            {397}event auth_HolderCompletesProtocol(msg_handshakeReq_8,msg_handshakeResp_8,msg_did_5,msg_credential_3)
        ) | (
            {398}out(ch(n_p_8), n_p_fromHolder)
        ) | (
            {399}out(ch(n_i_5), n_i_fromHolder)
        ) | (
            {400}out(ch((n_i_5,genDID(pk(sk_39),sk_39),issuerDID_3)), providingDID_fromHolder)
        ) | (
            {401}out(chA(credential_3), cred_fromHolder)
        )
    )
) | (
    {402}!
    {403}let sk_50: SecretKey = sk_verifier in
    {404}let talksOnlyToHonest_6: bool = true in
    {405}in(h, x_24: bitstring);
    {406}let msg_handshakeReq_10: bitstring = x_24 in
    {407}let sgndMsg_2: bitstring = adec(x_24,sk_50) in
    {408}let msg_34: bitstring = sgndMsg_2 in
    {409}let (unauth_n_p_2: bitstring,unauth_spk_p_2: PublicKey) = getMsg(sgndMsg_2) in
    {410}let (n_p_10: bitstring,spk_p_2: PublicKey) = auth(sgndMsg_2,unauth_spk_p_2) in
    {411}new ssk_10: SecretKey;
    {412}new n_v_4: bitstring;
    {413}let msg_35: bitstring = (n_p_10,n_v_4,pk(ssk_10)) in
    {414}let msg_handshakeResp_10: bitstring = aenc(sign(msg_35,sk_50),spk_p_2) in
    {415}out(h, msg_handshakeResp_10);
    {416}in(h, x_25: bitstring);
    {417}let msg_uri_4: bitstring = x_25 in
    {418}let sk_51: SecretKey = ssk_10 in
    {419}let msg_36: bitstring = auth(adec(x_25,sk_51),spk_p_2) in
    {420}let (n'_v: bitstring,u: bitstring) = msg_36 in
    {421}if (n'_v = n_v_4) then
    {422}if (u = uri) then
    {423}new n_c_4: bitstring;
    {424}let msg_37: bitstring = (n_c_4,acr) in
    {425}let sk_52: SecretKey = ssk_10 in
    {426}let msg_rule_4: bitstring = aenc(sign(msg_37,sk_52),spk_p_2) in
    {427}out(h, msg_rule_4);
    {428}in(h, x_26: bitstring);
    {429}let msg_vp_4: bitstring = x_26 in
    {430}let sk_53: SecretKey = ssk_10 in
    {431}let unauth_vp: bitstring = auth(adec(x_26,sk_53),spk_p_2) in
    {432}let unauth_dc: DC = decodeDC(unauth_vp) in
    {433}let issuer_1: DID = getIssuerFromDC(unauth_dc) in
    {434}let issuerPk_4: PublicKey = getPubKey(issuer_1) in
    {435}let dc_4: DC = proofVerify(unauth_dc,issuerPk_4) in
    {436}let (n'_c: bitstring,recipientDID_6: DID,n''_p: bitstring) = getPresentationHeaderFromDC(dc_4) in
    {437}if (recipientDID_6 = genDID(pk(sk_50),sk_50)) then
    {438}if (n'_c = n_c_4) then
    {439}if (issuer_1 = getIssuerFromRule(acr)) then
    {440}if (getAttrFromDC(dc_4) = getAttrFromRule(acr)) then
    {441}new access_token_4: bitstring;
    {442}let msg_38: bitstring = access_token_4 in
    {443}let sk_54: SecretKey = ssk_10 in
    {444}let msg_accessToken_4: bitstring = aenc(sign(msg_38,sk_54),spk_p_2) in
    {445}event auth_VerifierSendsLastMessageToProver(msg_handshakeReq_10,msg_handshakeResp_10,msg_uri_4,msg_rule_4,msg_vp_4,msg_accessToken_4);
    {446}out(h, msg_accessToken_4);
    {447}if talksOnlyToHonest_6 then
    (
        {448}event auth_VerifierCompletesProtocol(msg_handshakeReq_10,msg_handshakeResp_10,msg_uri_4,msg_rule_4,msg_vp_4)
    ) | (
        {449}out(ch(n_p_10), n_p_fromVerifier)
    ) | (
        {450}out(chR(acr), rule_fromVerifier)
    ) | (
        {451}out(ch((n_c_4,acr)), credRequest_fromVerifier)
    ) | (
        {452}out(ch(unauth_vp), unauth_vp_fromVerifier)
    ) | (
        {453}out(ch(getDcAsTuple(dc_4)), vp_fromVerifier)
    ) | (
        {454}out(chD(dc_4), cred_fromVerifier)
    ) | (
        {455}out(ch(access_token_4), access_token_fromVerifier)
    )
) | (
    {456}!
    {457}let sk_55: SecretKey = sk_verifier in
    {458}let talksOnlyToHonest_7: bool = false in
    {459}in(h, x_27: bitstring);
    {460}let msg_handshakeReq_11: bitstring = x_27 in
    {461}let sgndMsg_3: bitstring = adec(x_27,sk_55) in
    {462}let msg_39: bitstring = sgndMsg_3 in
    {463}let (unauth_n_p_3: bitstring,unauth_spk_p_3: PublicKey) = getMsg(sgndMsg_3) in
    {464}let (n_p_11: bitstring,spk_p_3: PublicKey) = auth(sgndMsg_3,unauth_spk_p_3) in
    {465}new ssk_11: SecretKey;
    {466}new n_v_5: bitstring;
    {467}let msg_40: bitstring = (n_p_11,n_v_5,pk(ssk_11)) in
    {468}let msg_handshakeResp_11: bitstring = aenc(sign(msg_40,sk_55),spk_p_3) in
    {469}out(h, msg_handshakeResp_11);
    {470}in(h, x_28: bitstring);
    {471}let msg_uri_5: bitstring = x_28 in
    {472}let sk_56: SecretKey = ssk_11 in
    {473}let msg_41: bitstring = auth(adec(x_28,sk_56),spk_p_3) in
    {474}let (n'_v_1: bitstring,u_1: bitstring) = msg_41 in
    {475}if (n'_v_1 = n_v_5) then
    {476}if (u_1 = uri) then
    {477}new n_c_5: bitstring;
    {478}let msg_42: bitstring = (n_c_5,acr_otherAgent) in
    {479}let sk_57: SecretKey = ssk_11 in
    {480}let msg_rule_5: bitstring = aenc(sign(msg_42,sk_57),spk_p_3) in
    {481}out(h, msg_rule_5);
    {482}in(h, x_29: bitstring);
    {483}let msg_vp_5: bitstring = x_29 in
    {484}let sk_58: SecretKey = ssk_11 in
    {485}let unauth_vp_1: bitstring = auth(adec(x_29,sk_58),spk_p_3) in
    {486}let unauth_dc_1: DC = decodeDC(unauth_vp_1) in
    {487}let issuer_2: DID = getIssuerFromDC(unauth_dc_1) in
    {488}let issuerPk_5: PublicKey = getPubKey(issuer_2) in
    {489}let dc_5: DC = proofVerify(unauth_dc_1,issuerPk_5) in
    {490}let (n'_c_1: bitstring,recipientDID_7: DID,n''_p_1: bitstring) = getPresentationHeaderFromDC(dc_5) in
    {491}if (recipientDID_7 = genDID(pk(sk_55),sk_55)) then
    {492}if (n'_c_1 = n_c_5) then
    {493}if (issuer_2 = getIssuerFromRule(acr_otherAgent)) then
    {494}if (getAttrFromDC(dc_5) = getAttrFromRule(acr_otherAgent)) then
    {495}new access_token_5: bitstring;
    {496}let msg_43: bitstring = access_token_5 in
    {497}let sk_59: SecretKey = ssk_11 in
    {498}let msg_accessToken_5: bitstring = aenc(sign(msg_43,sk_59),spk_p_3) in
    {499}event auth_VerifierSendsLastMessageToProver(msg_handshakeReq_11,msg_handshakeResp_11,msg_uri_5,msg_rule_5,msg_vp_5,msg_accessToken_5);
    {500}out(h, msg_accessToken_5);
    {501}if talksOnlyToHonest_7 then
    (
        {502}event auth_VerifierCompletesProtocol(msg_handshakeReq_11,msg_handshakeResp_11,msg_uri_5,msg_rule_5,msg_vp_5)
    ) | (
        {503}out(ch(n_p_11), n_p_fromVerifier)
    ) | (
        {504}out(chR(acr_otherAgent), rule_fromVerifier)
    ) | (
        {505}out(ch((n_c_5,acr_otherAgent)), credRequest_fromVerifier)
    ) | (
        {506}out(ch(unauth_vp_1), unauth_vp_fromVerifier)
    ) | (
        {507}out(ch(getDcAsTuple(dc_5)), vp_fromVerifier)
    ) | (
        {508}out(chD(dc_5), cred_fromVerifier)
    ) | (
        {509}out(ch(access_token_5), access_token_fromVerifier)
    )
) | (
    {510}!
    {511}let sk_60: SecretKey = sk_verifier in
    {512}let talksOnlyToHonest_8: bool = false in
    {513}in(h, x_30: bitstring);
    {514}let msg_handshakeReq_12: bitstring = x_30 in
    {515}let sgndMsg_4: bitstring = adec(x_30,sk_60) in
    {516}let msg_44: bitstring = sgndMsg_4 in
    {517}let (unauth_n_p_4: bitstring,unauth_spk_p_4: PublicKey) = getMsg(sgndMsg_4) in
    {518}let (n_p_12: bitstring,spk_p_4: PublicKey) = auth(sgndMsg_4,unauth_spk_p_4) in
    {519}new ssk_12: SecretKey;
    {520}new n_v_6: bitstring;
    {521}let msg_45: bitstring = (n_p_12,n_v_6,pk(ssk_12)) in
    {522}let msg_handshakeResp_12: bitstring = aenc(sign(msg_45,sk_60),spk_p_4) in
    {523}out(h, msg_handshakeResp_12);
    {524}in(h, x_31: bitstring);
    {525}let msg_uri_6: bitstring = x_31 in
    {526}let sk_61: SecretKey = ssk_12 in
    {527}let msg_46: bitstring = auth(adec(x_31,sk_61),spk_p_4) in
    {528}let (n'_v_2: bitstring,u_2: bitstring) = msg_46 in
    {529}if (n'_v_2 = n_v_6) then
    {530}if (u_2 = uri) then
    {531}new n_c_6: bitstring;
    {532}let msg_47: bitstring = (n_c_6,acr_compromisedIssuer) in
    {533}let sk_62: SecretKey = ssk_12 in
    {534}let msg_rule_6: bitstring = aenc(sign(msg_47,sk_62),spk_p_4) in
    {535}out(h, msg_rule_6);
    {536}in(h, x_32: bitstring);
    {537}let msg_vp_6: bitstring = x_32 in
    {538}let sk_63: SecretKey = ssk_12 in
    {539}let unauth_vp_2: bitstring = auth(adec(x_32,sk_63),spk_p_4) in
    {540}let unauth_dc_2: DC = decodeDC(unauth_vp_2) in
    {541}let issuer_3: DID = getIssuerFromDC(unauth_dc_2) in
    {542}let issuerPk_6: PublicKey = getPubKey(issuer_3) in
    {543}let dc_6: DC = proofVerify(unauth_dc_2,issuerPk_6) in
    {544}let (n'_c_2: bitstring,recipientDID_8: DID,n''_p_2: bitstring) = getPresentationHeaderFromDC(dc_6) in
    {545}if (recipientDID_8 = genDID(pk(sk_60),sk_60)) then
    {546}if (n'_c_2 = n_c_6) then
    {547}if (issuer_3 = getIssuerFromRule(acr_compromisedIssuer)) then
    {548}if (getAttrFromDC(dc_6) = getAttrFromRule(acr_compromisedIssuer)) then
    {549}new access_token_6: bitstring;
    {550}let msg_48: bitstring = access_token_6 in
    {551}let sk_64: SecretKey = ssk_12 in
    {552}let msg_accessToken_6: bitstring = aenc(sign(msg_48,sk_64),spk_p_4) in
    {553}event auth_VerifierSendsLastMessageToProver(msg_handshakeReq_12,msg_handshakeResp_12,msg_uri_6,msg_rule_6,msg_vp_6,msg_accessToken_6);
    {554}out(h, msg_accessToken_6);
    {555}if talksOnlyToHonest_8 then
    (
        {556}event auth_VerifierCompletesProtocol(msg_handshakeReq_12,msg_handshakeResp_12,msg_uri_6,msg_rule_6,msg_vp_6)
    ) | (
        {557}out(ch(n_p_12), n_p_fromVerifier)
    ) | (
        {558}out(chR(acr_compromisedIssuer), rule_fromVerifier)
    ) | (
        {559}out(ch((n_c_6,acr_compromisedIssuer)), credRequest_fromVerifier)
    ) | (
        {560}out(ch(unauth_vp_2), unauth_vp_fromVerifier)
    ) | (
        {561}out(ch(getDcAsTuple(dc_6)), vp_fromVerifier)
    ) | (
        {562}out(chD(dc_6), cred_fromVerifier)
    ) | (
        {563}out(ch(access_token_6), access_token_fromVerifier)
    )
) | (
    {564}!
    {565}let sk_65: SecretKey = sk_verifier in
    {566}let talksOnlyToHonest_9: bool = false in
    {567}in(h, x_33: bitstring);
    {568}let msg_handshakeReq_13: bitstring = x_33 in
    {569}let sgndMsg_5: bitstring = adec(x_33,sk_65) in
    {570}let msg_49: bitstring = sgndMsg_5 in
    {571}let (unauth_n_p_5: bitstring,unauth_spk_p_5: PublicKey) = getMsg(sgndMsg_5) in
    {572}let (n_p_13: bitstring,spk_p_5: PublicKey) = auth(sgndMsg_5,unauth_spk_p_5) in
    {573}new ssk_13: SecretKey;
    {574}new n_v_7: bitstring;
    {575}let msg_50: bitstring = (n_p_13,n_v_7,pk(ssk_13)) in
    {576}let msg_handshakeResp_13: bitstring = aenc(sign(msg_50,sk_65),spk_p_5) in
    {577}out(h, msg_handshakeResp_13);
    {578}in(h, x_34: bitstring);
    {579}let msg_uri_7: bitstring = x_34 in
    {580}let sk_66: SecretKey = ssk_13 in
    {581}let msg_51: bitstring = auth(adec(x_34,sk_66),spk_p_5) in
    {582}let (n'_v_3: bitstring,u_3: bitstring) = msg_51 in
    {583}if (n'_v_3 = n_v_7) then
    {584}if (u_3 = uri) then
    {585}new n_c_7: bitstring;
    {586}let msg_52: bitstring = (n_c_7,acr_compromised) in
    {587}let sk_67: SecretKey = ssk_13 in
    {588}let msg_rule_7: bitstring = aenc(sign(msg_52,sk_67),spk_p_5) in
    {589}out(h, msg_rule_7);
    {590}in(h, x_35: bitstring);
    {591}let msg_vp_7: bitstring = x_35 in
    {592}let sk_68: SecretKey = ssk_13 in
    {593}let unauth_vp_3: bitstring = auth(adec(x_35,sk_68),spk_p_5) in
    {594}let unauth_dc_3: DC = decodeDC(unauth_vp_3) in
    {595}let issuer_4: DID = getIssuerFromDC(unauth_dc_3) in
    {596}let issuerPk_7: PublicKey = getPubKey(issuer_4) in
    {597}let dc_7: DC = proofVerify(unauth_dc_3,issuerPk_7) in
    {598}let (n'_c_3: bitstring,recipientDID_9: DID,n''_p_3: bitstring) = getPresentationHeaderFromDC(dc_7) in
    {599}if (recipientDID_9 = genDID(pk(sk_65),sk_65)) then
    {600}if (n'_c_3 = n_c_7) then
    {601}if (issuer_4 = getIssuerFromRule(acr_compromised)) then
    {602}if (getAttrFromDC(dc_7) = getAttrFromRule(acr_compromised)) then
    {603}new access_token_7: bitstring;
    {604}let msg_53: bitstring = access_token_7 in
    {605}let sk_69: SecretKey = ssk_13 in
    {606}let msg_accessToken_7: bitstring = aenc(sign(msg_53,sk_69),spk_p_5) in
    {607}event auth_VerifierSendsLastMessageToProver(msg_handshakeReq_13,msg_handshakeResp_13,msg_uri_7,msg_rule_7,msg_vp_7,msg_accessToken_7);
    {608}out(h, msg_accessToken_7);
    {609}if talksOnlyToHonest_9 then
    (
        {610}event auth_VerifierCompletesProtocol(msg_handshakeReq_13,msg_handshakeResp_13,msg_uri_7,msg_rule_7,msg_vp_7)
    ) | (
        {611}out(ch(n_p_13), n_p_fromVerifier)
    ) | (
        {612}out(chR(acr_compromised), rule_fromVerifier)
    ) | (
        {613}out(ch((n_c_7,acr_compromised)), credRequest_fromVerifier)
    ) | (
        {614}out(ch(unauth_vp_3), unauth_vp_fromVerifier)
    ) | (
        {615}out(ch(getDcAsTuple(dc_7)), vp_fromVerifier)
    ) | (
        {616}out(chD(dc_7), cred_fromVerifier)
    ) | (
        {617}out(ch(access_token_7), access_token_fromVerifier)
    )
)

--  Process 1 (that is, process 0, with let moved downwards):
{1}new sk_prover: SecretKey;
{2}new sk_verifier: SecretKey;
{3}new sk_issuer: SecretKey;
{4}out(h, pk(sk_issuer));
{5}out(h, pk(sk_verifier));
{6}out(h, pk(sk_prover));
{7}out(h, genDID(pk(sk_prover),sk_prover));
{8}out(h, genDID(pk(sk_verifier),sk_verifier));
{9}out(h, genDID(pk(sk_issuer),sk_issuer));
(
    {14}!
    {19}in(h, x: bitstring);
    {15}let sk: SecretKey = sk_issuer in
    {21}let sgndMsg: bitstring = adec(x,sk) in
    {22}let (unauth_n_p: bitstring,unauth_spk_p: PublicKey) = getMsg(sgndMsg) in
    {23}let (n_p: bitstring,spk_p: PublicKey) = auth(sgndMsg,unauth_spk_p) in
    {24}new ssk: SecretKey;
    {25}new n_i: bitstring;
    {26}let msg: bitstring = (n_p,n_i,pk(ssk)) in
    {27}let msg_handshakeResp: bitstring = aenc(sign(msg,sk),spk_p) in
    {28}out(h, msg_handshakeResp);
    {29}in(h, x_1: bitstring);
    {31}let sk_1: SecretKey = ssk in
    {32}let msg_1: bitstring = auth(adec(x_1,sk_1),spk_p) in
    {33}let (unauth_n'_i: bitstring,unauth_proverDID: DID,unauth_recipientDID: DID) = getMsg(msg_1) in
    {34}let pk_p: PublicKey = getPubKey(unauth_proverDID) in
    {35}let (n'_i: bitstring,proverDID: DID,recipientDID: DID) = auth(msg_1,pk_p) in
    {17}let expectedDID: DID = genDID(pk(sk_prover),sk_prover) in
    {36}if (proverDID = expectedDID) then
    {37}if (n'_i = n_i) then
    {38}if (recipientDID = genDID(pk(sk),sk)) then
    {41}let sk_2: SecretKey = ssk in
    {16}let attr_1: bitstring = attr in
    {39}let cred: AC = issueAC(attr_1,sk) in
    {40}let msg_2: bitstring = (cred,proverDID) in
    {42}let msg_cred: bitstring = aenc(sign(msg_2,sk_2),spk_p) in
    {30}let msg_did: bitstring = x_1 in
    {20}let msg_handshakeReq: bitstring = x in
    {43}event auth_IssuerSendsLastMessageToHolder(msg_handshakeReq,msg_handshakeResp,msg_did,msg_cred);
    {44}out(h, msg_cred);
    {18}let talksOnlyToHonest: bool = true in
    {45}if talksOnlyToHonest then
    (
        {46}event auth_IssuerCompletesProtocol(msg_handshakeReq,msg_handshakeResp,msg_did)
    ) | (
        {47}out(ch(n_p), n_p_fromIssuer)
    ) | (
        {48}out(chA(cred), cred_fromIssuer)
    ) | (
        {49}out(ch((cred,proverDID)), credIssuing_fromIssuer_notMeaningful)
    )
) | (
    {50}!
    {55}in(h, x_2: bitstring);
    {51}let sk_3: SecretKey = sk_issuer in
    {57}let sgndMsg_1: bitstring = adec(x_2,sk_3) in
    {58}let (unauth_n_p_1: bitstring,unauth_spk_p_1: PublicKey) = getMsg(sgndMsg_1) in
    {59}let (n_p_1: bitstring,spk_p_1: PublicKey) = auth(sgndMsg_1,unauth_spk_p_1) in
    {60}new ssk_1: SecretKey;
    {61}new n_i_1: bitstring;
    {62}let msg_3: bitstring = (n_p_1,n_i_1,pk(ssk_1)) in
    {63}let msg_handshakeResp_1: bitstring = aenc(sign(msg_3,sk_3),spk_p_1) in
    {64}out(h, msg_handshakeResp_1);
    {65}in(h, x_3: bitstring);
    {67}let sk_4: SecretKey = ssk_1 in
    {68}let msg_4: bitstring = auth(adec(x_3,sk_4),spk_p_1) in
    {69}let (unauth_n'_i_1: bitstring,unauth_proverDID_1: DID,unauth_recipientDID_1: DID) = getMsg(msg_4) in
    {70}let pk_p_1: PublicKey = getPubKey(unauth_proverDID_1) in
    {71}let (n'_i_1: bitstring,proverDID_1: DID,recipientDID_1: DID) = auth(msg_4,pk_p_1) in
    {53}let expectedDID_1: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
    {72}if (proverDID_1 = expectedDID_1) then
    {73}if (n'_i_1 = n_i_1) then
    {74}if (recipientDID_1 = genDID(pk(sk_3),sk_3)) then
    {77}let sk_5: SecretKey = ssk_1 in
    {52}let attr_3: bitstring = attr_2 in
    {75}let cred_1: AC = issueAC(attr_3,sk_3) in
    {76}let msg_5: bitstring = (cred_1,proverDID_1) in
    {78}let msg_cred_1: bitstring = aenc(sign(msg_5,sk_5),spk_p_1) in
    {66}let msg_did_1: bitstring = x_3 in
    {56}let msg_handshakeReq_1: bitstring = x_2 in
    {79}event auth_IssuerSendsLastMessageToHolder(msg_handshakeReq_1,msg_handshakeResp_1,msg_did_1,msg_cred_1);
    {80}out(h, msg_cred_1);
    {54}let talksOnlyToHonest_1: bool = false in
    {81}if talksOnlyToHonest_1 then
    (
        {82}event auth_IssuerCompletesProtocol(msg_handshakeReq_1,msg_handshakeResp_1,msg_did_1)
    ) | (
        {83}out(ch(n_p_1), n_p_fromIssuer)
    ) | (
        {84}out(chA(cred_1), cred_fromIssuer)
    ) | (
        {85}out(ch((cred_1,proverDID_1)), credIssuing_fromIssuer_notMeaningful)
    )
) | (
    {86}!
    {88}let issuerDID: DID = genDID(pk(sk_issuer),sk_issuer) in
    {91}let pk_i: PublicKey = getPubKey(issuerDID) in
    {92}new ssk_2: SecretKey;
    {93}new n_p_2: bitstring;
    {95}let sk_7: SecretKey = ssk_2 in
    {94}let msg_6: bitstring = (n_p_2,pk(ssk_2)) in
    {96}let msg_handshakeReq_2: bitstring = aenc(sign(msg_6,sk_7),pk_i) in
    {97}out(h, msg_handshakeReq_2);
    {98}in(h, x_4: bitstring);
    {100}let sk_8: SecretKey = ssk_2 in
    {101}let msg_7: bitstring = auth(adec(x_4,sk_8),pk_i) in
    {102}let (n'_p: bitstring,n_i_2: bitstring,spk_i: PublicKey) = msg_7 in
    {103}if (n'_p = n_p_2) then
    {105}let sk_9: SecretKey = ssk_2 in
    {87}let sk_6: SecretKey = sk_prover in
    {104}let msg_8: bitstring = sign((n_i_2,genDID(pk(sk_6),sk_6),issuerDID),sk_6) in
    {106}let msg_did_2: bitstring = aenc(sign(msg_8,sk_9),spk_i) in
    {99}let msg_handshakeResp_2: bitstring = x_4 in
    {107}event auth_HolderSendsLastMessageToIssuer(msg_handshakeReq_2,msg_handshakeResp_2,msg_did_2);
    {108}out(h, msg_did_2);
    {109}in(h, x_5: bitstring);
    {111}let sk_10: SecretKey = ssk_2 in
    {112}let (credential: AC,recipientDID_2: DID) = auth(adec(x_5,sk_10),spk_i) in
    {113}if (recipientDID_2 = genDID(pk(sk_6),sk_6)) then
    {114}if (getIssuerFromAC(credential) = issuerDID) then
    {110}let msg_credential: bitstring = x_5 in
    {90}let talksOnlyToHonest_2: bool = true in
    (
        {115}!
        {89}let verifierDID: DID = genDID(pk(sk_verifier),sk_verifier) in
        {116}let pk_v: PublicKey = getPubKey(verifierDID) in
        {117}new ssk_3: SecretKey;
        {118}new n_p_3: bitstring;
        {120}let sk_11: SecretKey = ssk_3 in
        {119}let msg_9: bitstring = (n_p_3,pk(ssk_3)) in
        {121}let msg_handshakeReq_3: bitstring = aenc(sign(msg_9,sk_11),pk_v) in
        {122}out(h, msg_handshakeReq_3);
        {123}in(h, x_6: bitstring);
        {125}let sk_12: SecretKey = ssk_3 in
        {126}let msg_10: bitstring = auth(adec(x_6,sk_12),pk_v) in
        {127}let (n'_p_1: bitstring,n_v: bitstring,spk_v: PublicKey) = msg_10 in
        {128}if (n'_p_1 = n_p_3) then
        {130}let sk_13: SecretKey = ssk_3 in
        {129}let msg_11: bitstring = (n_v,uri) in
        {131}let msg_uri: bitstring = aenc(sign(msg_11,sk_13),spk_v) in
        {132}out(h, msg_uri);
        {133}in(h, x_7: bitstring);
        {135}let sk_14: SecretKey = ssk_3 in
        {136}let msg_12: bitstring = auth(adec(x_7,sk_14),spk_v) in
        {137}let (n_c: bitstring,rule: ACR) = msg_12 in
        {138}let issuerPk: PublicKey = getPubKey(getIssuerFromAC(credential)) in
        {142}let sk_15: SecretKey = ssk_3 in
        {139}let ph: bitstring = (n_c,verifierDID,n_p_3) in
        {140}let dc: DC = proofGen(credential,issuerPk,ph) in
        {141}let vp: bitstring = encodeDC(dc) in
        {143}let msg_vp: bitstring = aenc(sign(vp,sk_15),spk_v) in
        {134}let msg_rule: bitstring = x_7 in
        {124}let msg_handshakeResp_3: bitstring = x_6 in
        {144}event auth_ProverSendsLastMessageToVerifier(msg_handshakeReq_3,msg_handshakeResp_3,msg_uri,msg_rule,msg_vp);
        {145}event auth_ProverSendsLastMessageToVerifierInProtocolFull(msg_handshakeReq_2,msg_handshakeResp_2,msg_did_2,msg_credential,msg_handshakeReq_3,msg_handshakeResp_3,msg_uri,msg_rule,msg_vp);
        {146}out(h, msg_vp);
        {147}in(h, x_8: bitstring);
        {149}let sk_16: SecretKey = ssk_3 in
        {150}let access_token: bitstring = auth(adec(x_8,sk_16),spk_v) in
        {151}if talksOnlyToHonest_2 then
        (
            {148}let msg_accessToken: bitstring = x_8 in
            {152}event auth_ProverCompletesProtocol(msg_handshakeReq_3,msg_handshakeResp_3,msg_uri,msg_rule,msg_vp,msg_accessToken)
        ) | (
            {153}out(ch(n_p_3), n_p_fromProver)
        ) | (
            {154}out(chR(rule), rule_fromProver)
        ) | (
            {155}out(ch((n_c,verifierDID,credential)), unsigned_vp_fromProver)
        ) | (
            {156}out(ch(vp), vp_fromProver)
        ) | (
            {157}out(chA(credential), cred_fromProver)
        ) | (
            {158}out(ch(access_token), access_token_fromProver)
        )
    ) | (
        {159}if talksOnlyToHonest_2 then
        (
            {160}event auth_HolderCompletesProtocol(msg_handshakeReq_2,msg_handshakeResp_2,msg_did_2,msg_credential)
        ) | (
            {161}out(ch(n_p_2), n_p_fromHolder)
        ) | (
            {162}out(ch(n_i_2), n_i_fromHolder)
        ) | (
            {163}out(ch((n_i_2,genDID(pk(sk_6),sk_6),issuerDID)), providingDID_fromHolder)
        ) | (
            {164}out(chA(credential), cred_fromHolder)
        )
    )
) | (
    {165}!
    {167}let issuerDID_1: DID = genDID(pk(sk_issuer),sk_issuer) in
    {170}let pk_i_1: PublicKey = getPubKey(issuerDID_1) in
    {171}new ssk_4: SecretKey;
    {172}new n_p_4: bitstring;
    {174}let sk_18: SecretKey = ssk_4 in
    {173}let msg_13: bitstring = (n_p_4,pk(ssk_4)) in
    {175}let msg_handshakeReq_4: bitstring = aenc(sign(msg_13,sk_18),pk_i_1) in
    {176}out(h, msg_handshakeReq_4);
    {177}in(h, x_9: bitstring);
    {179}let sk_19: SecretKey = ssk_4 in
    {180}let msg_14: bitstring = auth(adec(x_9,sk_19),pk_i_1) in
    {181}let (n'_p_2: bitstring,n_i_3: bitstring,spk_i_1: PublicKey) = msg_14 in
    {182}if (n'_p_2 = n_p_4) then
    {184}let sk_20: SecretKey = ssk_4 in
    {166}let sk_17: SecretKey = sk_prover in
    {183}let msg_15: bitstring = sign((n_i_3,genDID(pk(sk_17),sk_17),issuerDID_1),sk_17) in
    {185}let msg_did_3: bitstring = aenc(sign(msg_15,sk_20),spk_i_1) in
    {178}let msg_handshakeResp_4: bitstring = x_9 in
    {186}event auth_HolderSendsLastMessageToIssuer(msg_handshakeReq_4,msg_handshakeResp_4,msg_did_3);
    {187}out(h, msg_did_3);
    {188}in(h, x_10: bitstring);
    {190}let sk_21: SecretKey = ssk_4 in
    {191}let (credential_1: AC,recipientDID_3: DID) = auth(adec(x_10,sk_21),spk_i_1) in
    {192}if (recipientDID_3 = genDID(pk(sk_17),sk_17)) then
    {193}if (getIssuerFromAC(credential_1) = issuerDID_1) then
    {189}let msg_credential_1: bitstring = x_10 in
    {169}let talksOnlyToHonest_3: bool = false in
    (
        {194}!
        {168}let verifierDID_1: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
        {195}let pk_v_1: PublicKey = getPubKey(verifierDID_1) in
        {196}new ssk_5: SecretKey;
        {197}new n_p_5: bitstring;
        {199}let sk_22: SecretKey = ssk_5 in
        {198}let msg_16: bitstring = (n_p_5,pk(ssk_5)) in
        {200}let msg_handshakeReq_5: bitstring = aenc(sign(msg_16,sk_22),pk_v_1) in
        {201}out(h, msg_handshakeReq_5);
        {202}in(h, x_11: bitstring);
        {204}let sk_23: SecretKey = ssk_5 in
        {205}let msg_17: bitstring = auth(adec(x_11,sk_23),pk_v_1) in
        {206}let (n'_p_3: bitstring,n_v_1: bitstring,spk_v_1: PublicKey) = msg_17 in
        {207}if (n'_p_3 = n_p_5) then
        {209}let sk_24: SecretKey = ssk_5 in
        {208}let msg_18: bitstring = (n_v_1,uri) in
        {210}let msg_uri_1: bitstring = aenc(sign(msg_18,sk_24),spk_v_1) in
        {211}out(h, msg_uri_1);
        {212}in(h, x_12: bitstring);
        {214}let sk_25: SecretKey = ssk_5 in
        {215}let msg_19: bitstring = auth(adec(x_12,sk_25),spk_v_1) in
        {216}let (n_c_1: bitstring,rule_1: ACR) = msg_19 in
        {217}let issuerPk_1: PublicKey = getPubKey(getIssuerFromAC(credential_1)) in
        {221}let sk_26: SecretKey = ssk_5 in
        {218}let ph_1: bitstring = (n_c_1,verifierDID_1,n_p_5) in
        {219}let dc_1: DC = proofGen(credential_1,issuerPk_1,ph_1) in
        {220}let vp_1: bitstring = encodeDC(dc_1) in
        {222}let msg_vp_1: bitstring = aenc(sign(vp_1,sk_26),spk_v_1) in
        {213}let msg_rule_1: bitstring = x_12 in
        {203}let msg_handshakeResp_5: bitstring = x_11 in
        {223}event auth_ProverSendsLastMessageToVerifier(msg_handshakeReq_5,msg_handshakeResp_5,msg_uri_1,msg_rule_1,msg_vp_1);
        {224}event auth_ProverSendsLastMessageToVerifierInProtocolFull(msg_handshakeReq_4,msg_handshakeResp_4,msg_did_3,msg_credential_1,msg_handshakeReq_5,msg_handshakeResp_5,msg_uri_1,msg_rule_1,msg_vp_1);
        {225}out(h, msg_vp_1);
        {226}in(h, x_13: bitstring);
        {228}let sk_27: SecretKey = ssk_5 in
        {229}let access_token_1: bitstring = auth(adec(x_13,sk_27),spk_v_1) in
        {230}if talksOnlyToHonest_3 then
        (
            {227}let msg_accessToken_1: bitstring = x_13 in
            {231}event auth_ProverCompletesProtocol(msg_handshakeReq_5,msg_handshakeResp_5,msg_uri_1,msg_rule_1,msg_vp_1,msg_accessToken_1)
        ) | (
            {232}out(ch(n_p_5), n_p_fromProver)
        ) | (
            {233}out(chR(rule_1), rule_fromProver)
        ) | (
            {234}out(ch((n_c_1,verifierDID_1,credential_1)), unsigned_vp_fromProver)
        ) | (
            {235}out(ch(vp_1), vp_fromProver)
        ) | (
            {236}out(chA(credential_1), cred_fromProver)
        ) | (
            {237}out(ch(access_token_1), access_token_fromProver)
        )
    ) | (
        {238}if talksOnlyToHonest_3 then
        (
            {239}event auth_HolderCompletesProtocol(msg_handshakeReq_4,msg_handshakeResp_4,msg_did_3,msg_credential_1)
        ) | (
            {240}out(ch(n_p_4), n_p_fromHolder)
        ) | (
            {241}out(ch(n_i_3), n_i_fromHolder)
        ) | (
            {242}out(ch((n_i_3,genDID(pk(sk_17),sk_17),issuerDID_1)), providingDID_fromHolder)
        ) | (
            {243}out(chA(credential_1), cred_fromHolder)
        )
    )
) | (
    {244}!
    {246}let issuerDID_2: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
    {249}let pk_i_2: PublicKey = getPubKey(issuerDID_2) in
    {250}new ssk_6: SecretKey;
    {251}new n_p_6: bitstring;
    {253}let sk_29: SecretKey = ssk_6 in
    {252}let msg_20: bitstring = (n_p_6,pk(ssk_6)) in
    {254}let msg_handshakeReq_6: bitstring = aenc(sign(msg_20,sk_29),pk_i_2) in
    {255}out(h, msg_handshakeReq_6);
    {256}in(h, x_14: bitstring);
    {258}let sk_30: SecretKey = ssk_6 in
    {259}let msg_21: bitstring = auth(adec(x_14,sk_30),pk_i_2) in
    {260}let (n'_p_4: bitstring,n_i_4: bitstring,spk_i_2: PublicKey) = msg_21 in
    {261}if (n'_p_4 = n_p_6) then
    {263}let sk_31: SecretKey = ssk_6 in
    {245}let sk_28: SecretKey = sk_prover in
    {262}let msg_22: bitstring = sign((n_i_4,genDID(pk(sk_28),sk_28),issuerDID_2),sk_28) in
    {264}let msg_did_4: bitstring = aenc(sign(msg_22,sk_31),spk_i_2) in
    {257}let msg_handshakeResp_6: bitstring = x_14 in
    {265}event auth_HolderSendsLastMessageToIssuer(msg_handshakeReq_6,msg_handshakeResp_6,msg_did_4);
    {266}out(h, msg_did_4);
    {267}in(h, x_15: bitstring);
    {269}let sk_32: SecretKey = ssk_6 in
    {270}let (credential_2: AC,recipientDID_4: DID) = auth(adec(x_15,sk_32),spk_i_2) in
    {271}if (recipientDID_4 = genDID(pk(sk_28),sk_28)) then
    {272}if (getIssuerFromAC(credential_2) = issuerDID_2) then
    {268}let msg_credential_2: bitstring = x_15 in
    {248}let talksOnlyToHonest_4: bool = false in
    (
        {273}!
        {247}let verifierDID_2: DID = genDID(pk(sk_verifier),sk_verifier) in
        {274}let pk_v_2: PublicKey = getPubKey(verifierDID_2) in
        {275}new ssk_7: SecretKey;
        {276}new n_p_7: bitstring;
        {278}let sk_33: SecretKey = ssk_7 in
        {277}let msg_23: bitstring = (n_p_7,pk(ssk_7)) in
        {279}let msg_handshakeReq_7: bitstring = aenc(sign(msg_23,sk_33),pk_v_2) in
        {280}out(h, msg_handshakeReq_7);
        {281}in(h, x_16: bitstring);
        {283}let sk_34: SecretKey = ssk_7 in
        {284}let msg_24: bitstring = auth(adec(x_16,sk_34),pk_v_2) in
        {285}let (n'_p_5: bitstring,n_v_2: bitstring,spk_v_2: PublicKey) = msg_24 in
        {286}if (n'_p_5 = n_p_7) then
        {288}let sk_35: SecretKey = ssk_7 in
        {287}let msg_25: bitstring = (n_v_2,uri) in
        {289}let msg_uri_2: bitstring = aenc(sign(msg_25,sk_35),spk_v_2) in
        {290}out(h, msg_uri_2);
        {291}in(h, x_17: bitstring);
        {293}let sk_36: SecretKey = ssk_7 in
        {294}let msg_26: bitstring = auth(adec(x_17,sk_36),spk_v_2) in
        {295}let (n_c_2: bitstring,rule_2: ACR) = msg_26 in
        {296}let issuerPk_2: PublicKey = getPubKey(getIssuerFromAC(credential_2)) in
        {300}let sk_37: SecretKey = ssk_7 in
        {297}let ph_2: bitstring = (n_c_2,verifierDID_2,n_p_7) in
        {298}let dc_2: DC = proofGen(credential_2,issuerPk_2,ph_2) in
        {299}let vp_2: bitstring = encodeDC(dc_2) in
        {301}let msg_vp_2: bitstring = aenc(sign(vp_2,sk_37),spk_v_2) in
        {292}let msg_rule_2: bitstring = x_17 in
        {282}let msg_handshakeResp_7: bitstring = x_16 in
        {302}event auth_ProverSendsLastMessageToVerifier(msg_handshakeReq_7,msg_handshakeResp_7,msg_uri_2,msg_rule_2,msg_vp_2);
        {303}event auth_ProverSendsLastMessageToVerifierInProtocolFull(msg_handshakeReq_6,msg_handshakeResp_6,msg_did_4,msg_credential_2,msg_handshakeReq_7,msg_handshakeResp_7,msg_uri_2,msg_rule_2,msg_vp_2);
        {304}out(h, msg_vp_2);
        {305}in(h, x_18: bitstring);
        {307}let sk_38: SecretKey = ssk_7 in
        {308}let access_token_2: bitstring = auth(adec(x_18,sk_38),spk_v_2) in
        {309}if talksOnlyToHonest_4 then
        (
            {306}let msg_accessToken_2: bitstring = x_18 in
            {310}event auth_ProverCompletesProtocol(msg_handshakeReq_7,msg_handshakeResp_7,msg_uri_2,msg_rule_2,msg_vp_2,msg_accessToken_2)
        ) | (
            {311}out(ch(n_p_7), n_p_fromProver)
        ) | (
            {312}out(chR(rule_2), rule_fromProver)
        ) | (
            {313}out(ch((n_c_2,verifierDID_2,credential_2)), unsigned_vp_fromProver)
        ) | (
            {314}out(ch(vp_2), vp_fromProver)
        ) | (
            {315}out(chA(credential_2), cred_fromProver)
        ) | (
            {316}out(ch(access_token_2), access_token_fromProver)
        )
    ) | (
        {317}if talksOnlyToHonest_4 then
        (
            {318}event auth_HolderCompletesProtocol(msg_handshakeReq_6,msg_handshakeResp_6,msg_did_4,msg_credential_2)
        ) | (
            {319}out(ch(n_p_6), n_p_fromHolder)
        ) | (
            {320}out(ch(n_i_4), n_i_fromHolder)
        ) | (
            {321}out(ch((n_i_4,genDID(pk(sk_28),sk_28),issuerDID_2)), providingDID_fromHolder)
        ) | (
            {322}out(chA(credential_2), cred_fromHolder)
        )
    )
) | (
    {323}!
    {325}let issuerDID_3: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
    {328}let pk_i_3: PublicKey = getPubKey(issuerDID_3) in
    {329}new ssk_8: SecretKey;
    {330}new n_p_8: bitstring;
    {332}let sk_40: SecretKey = ssk_8 in
    {331}let msg_27: bitstring = (n_p_8,pk(ssk_8)) in
    {333}let msg_handshakeReq_8: bitstring = aenc(sign(msg_27,sk_40),pk_i_3) in
    {334}out(h, msg_handshakeReq_8);
    {335}in(h, x_19: bitstring);
    {337}let sk_41: SecretKey = ssk_8 in
    {338}let msg_28: bitstring = auth(adec(x_19,sk_41),pk_i_3) in
    {339}let (n'_p_6: bitstring,n_i_5: bitstring,spk_i_3: PublicKey) = msg_28 in
    {340}if (n'_p_6 = n_p_8) then
    {342}let sk_42: SecretKey = ssk_8 in
    {324}let sk_39: SecretKey = sk_prover in
    {341}let msg_29: bitstring = sign((n_i_5,genDID(pk(sk_39),sk_39),issuerDID_3),sk_39) in
    {343}let msg_did_5: bitstring = aenc(sign(msg_29,sk_42),spk_i_3) in
    {336}let msg_handshakeResp_8: bitstring = x_19 in
    {344}event auth_HolderSendsLastMessageToIssuer(msg_handshakeReq_8,msg_handshakeResp_8,msg_did_5);
    {345}out(h, msg_did_5);
    {346}in(h, x_20: bitstring);
    {348}let sk_43: SecretKey = ssk_8 in
    {349}let (credential_3: AC,recipientDID_5: DID) = auth(adec(x_20,sk_43),spk_i_3) in
    {350}if (recipientDID_5 = genDID(pk(sk_39),sk_39)) then
    {351}if (getIssuerFromAC(credential_3) = issuerDID_3) then
    {347}let msg_credential_3: bitstring = x_20 in
    {327}let talksOnlyToHonest_5: bool = false in
    (
        {352}!
        {326}let verifierDID_3: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
        {353}let pk_v_3: PublicKey = getPubKey(verifierDID_3) in
        {354}new ssk_9: SecretKey;
        {355}new n_p_9: bitstring;
        {357}let sk_44: SecretKey = ssk_9 in
        {356}let msg_30: bitstring = (n_p_9,pk(ssk_9)) in
        {358}let msg_handshakeReq_9: bitstring = aenc(sign(msg_30,sk_44),pk_v_3) in
        {359}out(h, msg_handshakeReq_9);
        {360}in(h, x_21: bitstring);
        {362}let sk_45: SecretKey = ssk_9 in
        {363}let msg_31: bitstring = auth(adec(x_21,sk_45),pk_v_3) in
        {364}let (n'_p_7: bitstring,n_v_3: bitstring,spk_v_3: PublicKey) = msg_31 in
        {365}if (n'_p_7 = n_p_9) then
        {367}let sk_46: SecretKey = ssk_9 in
        {366}let msg_32: bitstring = (n_v_3,uri) in
        {368}let msg_uri_3: bitstring = aenc(sign(msg_32,sk_46),spk_v_3) in
        {369}out(h, msg_uri_3);
        {370}in(h, x_22: bitstring);
        {372}let sk_47: SecretKey = ssk_9 in
        {373}let msg_33: bitstring = auth(adec(x_22,sk_47),spk_v_3) in
        {374}let (n_c_3: bitstring,rule_3: ACR) = msg_33 in
        {375}let issuerPk_3: PublicKey = getPubKey(getIssuerFromAC(credential_3)) in
        {379}let sk_48: SecretKey = ssk_9 in
        {376}let ph_3: bitstring = (n_c_3,verifierDID_3,n_p_9) in
        {377}let dc_3: DC = proofGen(credential_3,issuerPk_3,ph_3) in
        {378}let vp_3: bitstring = encodeDC(dc_3) in
        {380}let msg_vp_3: bitstring = aenc(sign(vp_3,sk_48),spk_v_3) in
        {371}let msg_rule_3: bitstring = x_22 in
        {361}let msg_handshakeResp_9: bitstring = x_21 in
        {381}event auth_ProverSendsLastMessageToVerifier(msg_handshakeReq_9,msg_handshakeResp_9,msg_uri_3,msg_rule_3,msg_vp_3);
        {382}event auth_ProverSendsLastMessageToVerifierInProtocolFull(msg_handshakeReq_8,msg_handshakeResp_8,msg_did_5,msg_credential_3,msg_handshakeReq_9,msg_handshakeResp_9,msg_uri_3,msg_rule_3,msg_vp_3);
        {383}out(h, msg_vp_3);
        {384}in(h, x_23: bitstring);
        {386}let sk_49: SecretKey = ssk_9 in
        {387}let access_token_3: bitstring = auth(adec(x_23,sk_49),spk_v_3) in
        {388}if talksOnlyToHonest_5 then
        (
            {385}let msg_accessToken_3: bitstring = x_23 in
            {389}event auth_ProverCompletesProtocol(msg_handshakeReq_9,msg_handshakeResp_9,msg_uri_3,msg_rule_3,msg_vp_3,msg_accessToken_3)
        ) | (
            {390}out(ch(n_p_9), n_p_fromProver)
        ) | (
            {391}out(chR(rule_3), rule_fromProver)
        ) | (
            {392}out(ch((n_c_3,verifierDID_3,credential_3)), unsigned_vp_fromProver)
        ) | (
            {393}out(ch(vp_3), vp_fromProver)
        ) | (
            {394}out(chA(credential_3), cred_fromProver)
        ) | (
            {395}out(ch(access_token_3), access_token_fromProver)
        )
    ) | (
        {396}if talksOnlyToHonest_5 then
        (
            {397}event auth_HolderCompletesProtocol(msg_handshakeReq_8,msg_handshakeResp_8,msg_did_5,msg_credential_3)
        ) | (
            {398}out(ch(n_p_8), n_p_fromHolder)
        ) | (
            {399}out(ch(n_i_5), n_i_fromHolder)
        ) | (
            {400}out(ch((n_i_5,genDID(pk(sk_39),sk_39),issuerDID_3)), providingDID_fromHolder)
        ) | (
            {401}out(chA(credential_3), cred_fromHolder)
        )
    )
) | (
    {402}!
    {405}in(h, x_24: bitstring);
    {403}let sk_50: SecretKey = sk_verifier in
    {407}let sgndMsg_2: bitstring = adec(x_24,sk_50) in
    {409}let (unauth_n_p_2: bitstring,unauth_spk_p_2: PublicKey) = getMsg(sgndMsg_2) in
    {410}let (n_p_10: bitstring,spk_p_2: PublicKey) = auth(sgndMsg_2,unauth_spk_p_2) in
    {411}new ssk_10: SecretKey;
    {412}new n_v_4: bitstring;
    {413}let msg_35: bitstring = (n_p_10,n_v_4,pk(ssk_10)) in
    {414}let msg_handshakeResp_10: bitstring = aenc(sign(msg_35,sk_50),spk_p_2) in
    {415}out(h, msg_handshakeResp_10);
    {416}in(h, x_25: bitstring);
    {418}let sk_51: SecretKey = ssk_10 in
    {419}let msg_36: bitstring = auth(adec(x_25,sk_51),spk_p_2) in
    {420}let (n'_v: bitstring,u: bitstring) = msg_36 in
    {421}if (n'_v = n_v_4) then
    {422}if (u = uri) then
    {423}new n_c_4: bitstring;
    {425}let sk_52: SecretKey = ssk_10 in
    {10}let acr: ACR = makeRule(genDID(pk(sk_prover),sk_prover),attr,genDID(pk(sk_issuer),sk_issuer)) in
    {424}let msg_37: bitstring = (n_c_4,acr) in
    {426}let msg_rule_4: bitstring = aenc(sign(msg_37,sk_52),spk_p_2) in
    {427}out(h, msg_rule_4);
    {428}in(h, x_26: bitstring);
    {430}let sk_53: SecretKey = ssk_10 in
    {431}let unauth_vp: bitstring = auth(adec(x_26,sk_53),spk_p_2) in
    {432}let unauth_dc: DC = decodeDC(unauth_vp) in
    {433}let issuer_1: DID = getIssuerFromDC(unauth_dc) in
    {434}let issuerPk_4: PublicKey = getPubKey(issuer_1) in
    {435}let dc_4: DC = proofVerify(unauth_dc,issuerPk_4) in
    {436}let (n'_c: bitstring,recipientDID_6: DID,n''_p: bitstring) = getPresentationHeaderFromDC(dc_4) in
    {437}if (recipientDID_6 = genDID(pk(sk_50),sk_50)) then
    {438}if (n'_c = n_c_4) then
    {439}if (issuer_1 = getIssuerFromRule(acr)) then
    {440}if (getAttrFromDC(dc_4) = getAttrFromRule(acr)) then
    {441}new access_token_4: bitstring;
    {443}let sk_54: SecretKey = ssk_10 in
    {442}let msg_38: bitstring = access_token_4 in
    {444}let msg_accessToken_4: bitstring = aenc(sign(msg_38,sk_54),spk_p_2) in
    {429}let msg_vp_4: bitstring = x_26 in
    {417}let msg_uri_4: bitstring = x_25 in
    {406}let msg_handshakeReq_10: bitstring = x_24 in
    {445}event auth_VerifierSendsLastMessageToProver(msg_handshakeReq_10,msg_handshakeResp_10,msg_uri_4,msg_rule_4,msg_vp_4,msg_accessToken_4);
    {446}out(h, msg_accessToken_4);
    {404}let talksOnlyToHonest_6: bool = true in
    {447}if talksOnlyToHonest_6 then
    (
        {448}event auth_VerifierCompletesProtocol(msg_handshakeReq_10,msg_handshakeResp_10,msg_uri_4,msg_rule_4,msg_vp_4)
    ) | (
        {449}out(ch(n_p_10), n_p_fromVerifier)
    ) | (
        {450}out(chR(acr), rule_fromVerifier)
    ) | (
        {451}out(ch((n_c_4,acr)), credRequest_fromVerifier)
    ) | (
        {452}out(ch(unauth_vp), unauth_vp_fromVerifier)
    ) | (
        {453}out(ch(getDcAsTuple(dc_4)), vp_fromVerifier)
    ) | (
        {454}out(chD(dc_4), cred_fromVerifier)
    ) | (
        {455}out(ch(access_token_4), access_token_fromVerifier)
    )
) | (
    {456}!
    {459}in(h, x_27: bitstring);
    {457}let sk_55: SecretKey = sk_verifier in
    {461}let sgndMsg_3: bitstring = adec(x_27,sk_55) in
    {463}let (unauth_n_p_3: bitstring,unauth_spk_p_3: PublicKey) = getMsg(sgndMsg_3) in
    {464}let (n_p_11: bitstring,spk_p_3: PublicKey) = auth(sgndMsg_3,unauth_spk_p_3) in
    {465}new ssk_11: SecretKey;
    {466}new n_v_5: bitstring;
    {467}let msg_40: bitstring = (n_p_11,n_v_5,pk(ssk_11)) in
    {468}let msg_handshakeResp_11: bitstring = aenc(sign(msg_40,sk_55),spk_p_3) in
    {469}out(h, msg_handshakeResp_11);
    {470}in(h, x_28: bitstring);
    {472}let sk_56: SecretKey = ssk_11 in
    {473}let msg_41: bitstring = auth(adec(x_28,sk_56),spk_p_3) in
    {474}let (n'_v_1: bitstring,u_1: bitstring) = msg_41 in
    {475}if (n'_v_1 = n_v_5) then
    {476}if (u_1 = uri) then
    {477}new n_c_5: bitstring;
    {479}let sk_57: SecretKey = ssk_11 in
    {11}let acr_otherAgent: ACR = makeRule(genDID(pk(sk_otherAgent),sk_otherAgent),attr,genDID(pk(sk_issuer),sk_issuer)) in
    {478}let msg_42: bitstring = (n_c_5,acr_otherAgent) in
    {480}let msg_rule_5: bitstring = aenc(sign(msg_42,sk_57),spk_p_3) in
    {481}out(h, msg_rule_5);
    {482}in(h, x_29: bitstring);
    {484}let sk_58: SecretKey = ssk_11 in
    {485}let unauth_vp_1: bitstring = auth(adec(x_29,sk_58),spk_p_3) in
    {486}let unauth_dc_1: DC = decodeDC(unauth_vp_1) in
    {487}let issuer_2: DID = getIssuerFromDC(unauth_dc_1) in
    {488}let issuerPk_5: PublicKey = getPubKey(issuer_2) in
    {489}let dc_5: DC = proofVerify(unauth_dc_1,issuerPk_5) in
    {490}let (n'_c_1: bitstring,recipientDID_7: DID,n''_p_1: bitstring) = getPresentationHeaderFromDC(dc_5) in
    {491}if (recipientDID_7 = genDID(pk(sk_55),sk_55)) then
    {492}if (n'_c_1 = n_c_5) then
    {493}if (issuer_2 = getIssuerFromRule(acr_otherAgent)) then
    {494}if (getAttrFromDC(dc_5) = getAttrFromRule(acr_otherAgent)) then
    {495}new access_token_5: bitstring;
    {497}let sk_59: SecretKey = ssk_11 in
    {496}let msg_43: bitstring = access_token_5 in
    {498}let msg_accessToken_5: bitstring = aenc(sign(msg_43,sk_59),spk_p_3) in
    {483}let msg_vp_5: bitstring = x_29 in
    {471}let msg_uri_5: bitstring = x_28 in
    {460}let msg_handshakeReq_11: bitstring = x_27 in
    {499}event auth_VerifierSendsLastMessageToProver(msg_handshakeReq_11,msg_handshakeResp_11,msg_uri_5,msg_rule_5,msg_vp_5,msg_accessToken_5);
    {500}out(h, msg_accessToken_5);
    {458}let talksOnlyToHonest_7: bool = false in
    {501}if talksOnlyToHonest_7 then
    (
        {502}event auth_VerifierCompletesProtocol(msg_handshakeReq_11,msg_handshakeResp_11,msg_uri_5,msg_rule_5,msg_vp_5)
    ) | (
        {503}out(ch(n_p_11), n_p_fromVerifier)
    ) | (
        {504}out(chR(acr_otherAgent), rule_fromVerifier)
    ) | (
        {505}out(ch((n_c_5,acr_otherAgent)), credRequest_fromVerifier)
    ) | (
        {506}out(ch(unauth_vp_1), unauth_vp_fromVerifier)
    ) | (
        {507}out(ch(getDcAsTuple(dc_5)), vp_fromVerifier)
    ) | (
        {508}out(chD(dc_5), cred_fromVerifier)
    ) | (
        {509}out(ch(access_token_5), access_token_fromVerifier)
    )
) | (
    {510}!
    {513}in(h, x_30: bitstring);
    {511}let sk_60: SecretKey = sk_verifier in
    {515}let sgndMsg_4: bitstring = adec(x_30,sk_60) in
    {517}let (unauth_n_p_4: bitstring,unauth_spk_p_4: PublicKey) = getMsg(sgndMsg_4) in
    {518}let (n_p_12: bitstring,spk_p_4: PublicKey) = auth(sgndMsg_4,unauth_spk_p_4) in
    {519}new ssk_12: SecretKey;
    {520}new n_v_6: bitstring;
    {521}let msg_45: bitstring = (n_p_12,n_v_6,pk(ssk_12)) in
    {522}let msg_handshakeResp_12: bitstring = aenc(sign(msg_45,sk_60),spk_p_4) in
    {523}out(h, msg_handshakeResp_12);
    {524}in(h, x_31: bitstring);
    {526}let sk_61: SecretKey = ssk_12 in
    {527}let msg_46: bitstring = auth(adec(x_31,sk_61),spk_p_4) in
    {528}let (n'_v_2: bitstring,u_2: bitstring) = msg_46 in
    {529}if (n'_v_2 = n_v_6) then
    {530}if (u_2 = uri) then
    {531}new n_c_6: bitstring;
    {533}let sk_62: SecretKey = ssk_12 in
    {12}let acr_compromisedIssuer: ACR = makeRule(genDID(pk(sk_prover),sk_prover),attr,genDID(pk(sk_otherAgent),sk_otherAgent)) in
    {532}let msg_47: bitstring = (n_c_6,acr_compromisedIssuer) in
    {534}let msg_rule_6: bitstring = aenc(sign(msg_47,sk_62),spk_p_4) in
    {535}out(h, msg_rule_6);
    {536}in(h, x_32: bitstring);
    {538}let sk_63: SecretKey = ssk_12 in
    {539}let unauth_vp_2: bitstring = auth(adec(x_32,sk_63),spk_p_4) in
    {540}let unauth_dc_2: DC = decodeDC(unauth_vp_2) in
    {541}let issuer_3: DID = getIssuerFromDC(unauth_dc_2) in
    {542}let issuerPk_6: PublicKey = getPubKey(issuer_3) in
    {543}let dc_6: DC = proofVerify(unauth_dc_2,issuerPk_6) in
    {544}let (n'_c_2: bitstring,recipientDID_8: DID,n''_p_2: bitstring) = getPresentationHeaderFromDC(dc_6) in
    {545}if (recipientDID_8 = genDID(pk(sk_60),sk_60)) then
    {546}if (n'_c_2 = n_c_6) then
    {547}if (issuer_3 = getIssuerFromRule(acr_compromisedIssuer)) then
    {548}if (getAttrFromDC(dc_6) = getAttrFromRule(acr_compromisedIssuer)) then
    {549}new access_token_6: bitstring;
    {551}let sk_64: SecretKey = ssk_12 in
    {550}let msg_48: bitstring = access_token_6 in
    {552}let msg_accessToken_6: bitstring = aenc(sign(msg_48,sk_64),spk_p_4) in
    {537}let msg_vp_6: bitstring = x_32 in
    {525}let msg_uri_6: bitstring = x_31 in
    {514}let msg_handshakeReq_12: bitstring = x_30 in
    {553}event auth_VerifierSendsLastMessageToProver(msg_handshakeReq_12,msg_handshakeResp_12,msg_uri_6,msg_rule_6,msg_vp_6,msg_accessToken_6);
    {554}out(h, msg_accessToken_6);
    {512}let talksOnlyToHonest_8: bool = false in
    {555}if talksOnlyToHonest_8 then
    (
        {556}event auth_VerifierCompletesProtocol(msg_handshakeReq_12,msg_handshakeResp_12,msg_uri_6,msg_rule_6,msg_vp_6)
    ) | (
        {557}out(ch(n_p_12), n_p_fromVerifier)
    ) | (
        {558}out(chR(acr_compromisedIssuer), rule_fromVerifier)
    ) | (
        {559}out(ch((n_c_6,acr_compromisedIssuer)), credRequest_fromVerifier)
    ) | (
        {560}out(ch(unauth_vp_2), unauth_vp_fromVerifier)
    ) | (
        {561}out(ch(getDcAsTuple(dc_6)), vp_fromVerifier)
    ) | (
        {562}out(chD(dc_6), cred_fromVerifier)
    ) | (
        {563}out(ch(access_token_6), access_token_fromVerifier)
    )
) | (
    {564}!
    {567}in(h, x_33: bitstring);
    {565}let sk_65: SecretKey = sk_verifier in
    {569}let sgndMsg_5: bitstring = adec(x_33,sk_65) in
    {571}let (unauth_n_p_5: bitstring,unauth_spk_p_5: PublicKey) = getMsg(sgndMsg_5) in
    {572}let (n_p_13: bitstring,spk_p_5: PublicKey) = auth(sgndMsg_5,unauth_spk_p_5) in
    {573}new ssk_13: SecretKey;
    {574}new n_v_7: bitstring;
    {575}let msg_50: bitstring = (n_p_13,n_v_7,pk(ssk_13)) in
    {576}let msg_handshakeResp_13: bitstring = aenc(sign(msg_50,sk_65),spk_p_5) in
    {577}out(h, msg_handshakeResp_13);
    {578}in(h, x_34: bitstring);
    {580}let sk_66: SecretKey = ssk_13 in
    {581}let msg_51: bitstring = auth(adec(x_34,sk_66),spk_p_5) in
    {582}let (n'_v_3: bitstring,u_3: bitstring) = msg_51 in
    {583}if (n'_v_3 = n_v_7) then
    {584}if (u_3 = uri) then
    {585}new n_c_7: bitstring;
    {587}let sk_67: SecretKey = ssk_13 in
    {13}let acr_compromised: ACR = makeRule(genDID(pk(sk_otherAgent),sk_otherAgent),attr,genDID(pk(sk_otherAgent),sk_otherAgent)) in
    {586}let msg_52: bitstring = (n_c_7,acr_compromised) in
    {588}let msg_rule_7: bitstring = aenc(sign(msg_52,sk_67),spk_p_5) in
    {589}out(h, msg_rule_7);
    {590}in(h, x_35: bitstring);
    {592}let sk_68: SecretKey = ssk_13 in
    {593}let unauth_vp_3: bitstring = auth(adec(x_35,sk_68),spk_p_5) in
    {594}let unauth_dc_3: DC = decodeDC(unauth_vp_3) in
    {595}let issuer_4: DID = getIssuerFromDC(unauth_dc_3) in
    {596}let issuerPk_7: PublicKey = getPubKey(issuer_4) in
    {597}let dc_7: DC = proofVerify(unauth_dc_3,issuerPk_7) in
    {598}let (n'_c_3: bitstring,recipientDID_9: DID,n''_p_3: bitstring) = getPresentationHeaderFromDC(dc_7) in
    {599}if (recipientDID_9 = genDID(pk(sk_65),sk_65)) then
    {600}if (n'_c_3 = n_c_7) then
    {601}if (issuer_4 = getIssuerFromRule(acr_compromised)) then
    {602}if (getAttrFromDC(dc_7) = getAttrFromRule(acr_compromised)) then
    {603}new access_token_7: bitstring;
    {605}let sk_69: SecretKey = ssk_13 in
    {604}let msg_53: bitstring = access_token_7 in
    {606}let msg_accessToken_7: bitstring = aenc(sign(msg_53,sk_69),spk_p_5) in
    {591}let msg_vp_7: bitstring = x_35 in
    {579}let msg_uri_7: bitstring = x_34 in
    {568}let msg_handshakeReq_13: bitstring = x_33 in
    {607}event auth_VerifierSendsLastMessageToProver(msg_handshakeReq_13,msg_handshakeResp_13,msg_uri_7,msg_rule_7,msg_vp_7,msg_accessToken_7);
    {608}out(h, msg_accessToken_7);
    {566}let talksOnlyToHonest_9: bool = false in
    {609}if talksOnlyToHonest_9 then
    (
        {610}event auth_VerifierCompletesProtocol(msg_handshakeReq_13,msg_handshakeResp_13,msg_uri_7,msg_rule_7,msg_vp_7)
    ) | (
        {611}out(ch(n_p_13), n_p_fromVerifier)
    ) | (
        {612}out(chR(acr_compromised), rule_fromVerifier)
    ) | (
        {613}out(ch((n_c_7,acr_compromised)), credRequest_fromVerifier)
    ) | (
        {614}out(ch(unauth_vp_3), unauth_vp_fromVerifier)
    ) | (
        {615}out(ch(getDcAsTuple(dc_7)), vp_fromVerifier)
    ) | (
        {616}out(chD(dc_7), cred_fromVerifier)
    ) | (
        {617}out(ch(access_token_7), access_token_fromVerifier)
    )
)

-- Query not attacker(n_p_fromHolder[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 88 rules.
400 rules inserted. Base: 344 rules (80 with conclusion selected). Queue: 102 rules.
600 rules inserted. Base: 516 rules (104 with conclusion selected). Queue: 83 rules.
800 rules inserted. Base: 656 rules (114 with conclusion selected). Queue: 92 rules.
1000 rules inserted. Base: 792 rules (131 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 823 rules (149 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 916 rules (160 with conclusion selected). Queue: 165 rules.
1600 rules inserted. Base: 985 rules (170 with conclusion selected). Queue: 148 rules.
1800 rules inserted. Base: 1108 rules (191 with conclusion selected). Queue: 81 rules.
2000 rules inserted. Base: 1171 rules (204 with conclusion selected). Queue: 68 rules.
2200 rules inserted. Base: 1251 rules (212 with conclusion selected). Queue: 79 rules.
2400 rules inserted. Base: 1362 rules (230 with conclusion selected). Queue: 8 rules.
Starting query not attacker(n_p_fromHolder[])
RESULT not attacker(n_p_fromHolder[]) is true.
-- Query not attacker(n_i_fromHolder[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 88 rules.
400 rules inserted. Base: 344 rules (80 with conclusion selected). Queue: 102 rules.
600 rules inserted. Base: 516 rules (104 with conclusion selected). Queue: 83 rules.
800 rules inserted. Base: 656 rules (114 with conclusion selected). Queue: 92 rules.
1000 rules inserted. Base: 792 rules (131 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 823 rules (149 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 916 rules (160 with conclusion selected). Queue: 165 rules.
1600 rules inserted. Base: 985 rules (170 with conclusion selected). Queue: 148 rules.
1800 rules inserted. Base: 1108 rules (191 with conclusion selected). Queue: 81 rules.
2000 rules inserted. Base: 1171 rules (204 with conclusion selected). Queue: 68 rules.
2200 rules inserted. Base: 1251 rules (212 with conclusion selected). Queue: 79 rules.
2400 rules inserted. Base: 1362 rules (230 with conclusion selected). Queue: 8 rules.
Starting query not attacker(n_i_fromHolder[])
RESULT not attacker(n_i_fromHolder[]) is true.
-- Query not attacker(providingDID_fromHolder[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 88 rules.
400 rules inserted. Base: 344 rules (80 with conclusion selected). Queue: 102 rules.
600 rules inserted. Base: 516 rules (104 with conclusion selected). Queue: 83 rules.
800 rules inserted. Base: 656 rules (114 with conclusion selected). Queue: 92 rules.
1000 rules inserted. Base: 792 rules (131 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 823 rules (149 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 916 rules (160 with conclusion selected). Queue: 165 rules.
1600 rules inserted. Base: 985 rules (170 with conclusion selected). Queue: 148 rules.
1800 rules inserted. Base: 1108 rules (191 with conclusion selected). Queue: 81 rules.
2000 rules inserted. Base: 1171 rules (204 with conclusion selected). Queue: 68 rules.
2200 rules inserted. Base: 1251 rules (212 with conclusion selected). Queue: 79 rules.
2400 rules inserted. Base: 1362 rules (230 with conclusion selected). Queue: 8 rules.
Starting query not attacker(providingDID_fromHolder[])
RESULT not attacker(providingDID_fromHolder[]) is true.
-- Query not attacker(n_p_fromIssuer[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 88 rules.
400 rules inserted. Base: 344 rules (80 with conclusion selected). Queue: 102 rules.
600 rules inserted. Base: 516 rules (104 with conclusion selected). Queue: 83 rules.
800 rules inserted. Base: 656 rules (114 with conclusion selected). Queue: 92 rules.
1000 rules inserted. Base: 792 rules (131 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 823 rules (149 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 916 rules (160 with conclusion selected). Queue: 165 rules.
1600 rules inserted. Base: 985 rules (170 with conclusion selected). Queue: 148 rules.
1800 rules inserted. Base: 1108 rules (191 with conclusion selected). Queue: 81 rules.
2000 rules inserted. Base: 1171 rules (204 with conclusion selected). Queue: 68 rules.
2200 rules inserted. Base: 1251 rules (212 with conclusion selected). Queue: 79 rules.
2400 rules inserted. Base: 1362 rules (230 with conclusion selected). Queue: 8 rules.
Starting query not attacker(n_p_fromIssuer[])
RESULT not attacker(n_p_fromIssuer[]) is true.
-- Query not attacker(credIssuing_fromIssuer_notMeaningful[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 88 rules.
400 rules inserted. Base: 344 rules (80 with conclusion selected). Queue: 102 rules.
600 rules inserted. Base: 516 rules (104 with conclusion selected). Queue: 83 rules.
800 rules inserted. Base: 656 rules (114 with conclusion selected). Queue: 92 rules.
1000 rules inserted. Base: 792 rules (131 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 823 rules (149 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 916 rules (160 with conclusion selected). Queue: 165 rules.
1600 rules inserted. Base: 985 rules (170 with conclusion selected). Queue: 148 rules.
1800 rules inserted. Base: 1108 rules (191 with conclusion selected). Queue: 81 rules.
2000 rules inserted. Base: 1171 rules (204 with conclusion selected). Queue: 68 rules.
2200 rules inserted. Base: 1251 rules (212 with conclusion selected). Queue: 79 rules.
2400 rules inserted. Base: 1362 rules (230 with conclusion selected). Queue: 8 rules.
Starting query not attacker(credIssuing_fromIssuer_notMeaningful[])
RESULT not attacker(credIssuing_fromIssuer_notMeaningful[]) is true.
-- Query not attacker(n_p_fromProver[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 88 rules.
400 rules inserted. Base: 344 rules (80 with conclusion selected). Queue: 102 rules.
600 rules inserted. Base: 516 rules (104 with conclusion selected). Queue: 83 rules.
800 rules inserted. Base: 656 rules (114 with conclusion selected). Queue: 92 rules.
1000 rules inserted. Base: 792 rules (131 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 823 rules (149 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 916 rules (160 with conclusion selected). Queue: 165 rules.
1600 rules inserted. Base: 985 rules (170 with conclusion selected). Queue: 148 rules.
1800 rules inserted. Base: 1108 rules (191 with conclusion selected). Queue: 81 rules.
2000 rules inserted. Base: 1171 rules (204 with conclusion selected). Queue: 68 rules.
2200 rules inserted. Base: 1251 rules (212 with conclusion selected). Queue: 79 rules.
2400 rules inserted. Base: 1362 rules (230 with conclusion selected). Queue: 8 rules.
Starting query not attacker(n_p_fromProver[])
RESULT not attacker(n_p_fromProver[]) is true.
-- Query not attacker(unsigned_vp_fromProver[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 88 rules.
400 rules inserted. Base: 344 rules (80 with conclusion selected). Queue: 102 rules.
600 rules inserted. Base: 516 rules (104 with conclusion selected). Queue: 83 rules.
800 rules inserted. Base: 656 rules (114 with conclusion selected). Queue: 92 rules.
1000 rules inserted. Base: 792 rules (131 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 823 rules (149 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 916 rules (160 with conclusion selected). Queue: 165 rules.
1600 rules inserted. Base: 985 rules (170 with conclusion selected). Queue: 148 rules.
1800 rules inserted. Base: 1108 rules (191 with conclusion selected). Queue: 81 rules.
2000 rules inserted. Base: 1171 rules (204 with conclusion selected). Queue: 68 rules.
2200 rules inserted. Base: 1251 rules (212 with conclusion selected). Queue: 79 rules.
2400 rules inserted. Base: 1362 rules (230 with conclusion selected). Queue: 8 rules.
Starting query not attacker(unsigned_vp_fromProver[])
RESULT not attacker(unsigned_vp_fromProver[]) is true.
-- Query not attacker(vp_fromProver[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 88 rules.
400 rules inserted. Base: 344 rules (80 with conclusion selected). Queue: 102 rules.
600 rules inserted. Base: 516 rules (104 with conclusion selected). Queue: 83 rules.
800 rules inserted. Base: 656 rules (114 with conclusion selected). Queue: 92 rules.
1000 rules inserted. Base: 792 rules (131 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 823 rules (149 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 916 rules (160 with conclusion selected). Queue: 165 rules.
1600 rules inserted. Base: 985 rules (170 with conclusion selected). Queue: 148 rules.
1800 rules inserted. Base: 1108 rules (191 with conclusion selected). Queue: 81 rules.
2000 rules inserted. Base: 1171 rules (204 with conclusion selected). Queue: 68 rules.
2200 rules inserted. Base: 1251 rules (212 with conclusion selected). Queue: 79 rules.
2400 rules inserted. Base: 1362 rules (230 with conclusion selected). Queue: 8 rules.
Starting query not attacker(vp_fromProver[])
RESULT not attacker(vp_fromProver[]) is true.
-- Query not attacker(cred_fromProver[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 88 rules.
400 rules inserted. Base: 344 rules (80 with conclusion selected). Queue: 102 rules.
600 rules inserted. Base: 516 rules (104 with conclusion selected). Queue: 83 rules.
800 rules inserted. Base: 656 rules (114 with conclusion selected). Queue: 92 rules.
1000 rules inserted. Base: 792 rules (131 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 823 rules (149 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 916 rules (160 with conclusion selected). Queue: 165 rules.
1600 rules inserted. Base: 985 rules (170 with conclusion selected). Queue: 148 rules.
1800 rules inserted. Base: 1108 rules (191 with conclusion selected). Queue: 81 rules.
2000 rules inserted. Base: 1171 rules (204 with conclusion selected). Queue: 68 rules.
2200 rules inserted. Base: 1251 rules (212 with conclusion selected). Queue: 79 rules.
2400 rules inserted. Base: 1362 rules (230 with conclusion selected). Queue: 8 rules.
Starting query not attacker(cred_fromProver[])
RESULT not attacker(cred_fromProver[]) is true.
-- Query not attacker(access_token_fromProver[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 88 rules.
400 rules inserted. Base: 344 rules (80 with conclusion selected). Queue: 102 rules.
600 rules inserted. Base: 516 rules (104 with conclusion selected). Queue: 83 rules.
800 rules inserted. Base: 656 rules (114 with conclusion selected). Queue: 92 rules.
1000 rules inserted. Base: 792 rules (131 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 823 rules (149 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 916 rules (160 with conclusion selected). Queue: 165 rules.
1600 rules inserted. Base: 985 rules (170 with conclusion selected). Queue: 148 rules.
1800 rules inserted. Base: 1108 rules (191 with conclusion selected). Queue: 81 rules.
2000 rules inserted. Base: 1171 rules (204 with conclusion selected). Queue: 68 rules.
2200 rules inserted. Base: 1251 rules (212 with conclusion selected). Queue: 79 rules.
2400 rules inserted. Base: 1362 rules (230 with conclusion selected). Queue: 8 rules.
Starting query not attacker(access_token_fromProver[])
RESULT not attacker(access_token_fromProver[]) is true.
-- Query not attacker(n_p_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 88 rules.
400 rules inserted. Base: 344 rules (80 with conclusion selected). Queue: 102 rules.
600 rules inserted. Base: 516 rules (104 with conclusion selected). Queue: 83 rules.
800 rules inserted. Base: 656 rules (114 with conclusion selected). Queue: 92 rules.
1000 rules inserted. Base: 792 rules (131 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 823 rules (149 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 916 rules (160 with conclusion selected). Queue: 165 rules.
1600 rules inserted. Base: 985 rules (170 with conclusion selected). Queue: 148 rules.
1800 rules inserted. Base: 1108 rules (191 with conclusion selected). Queue: 81 rules.
2000 rules inserted. Base: 1171 rules (204 with conclusion selected). Queue: 68 rules.
2200 rules inserted. Base: 1251 rules (212 with conclusion selected). Queue: 79 rules.
2400 rules inserted. Base: 1362 rules (230 with conclusion selected). Queue: 8 rules.
Starting query not attacker(n_p_fromVerifier[])
RESULT not attacker(n_p_fromVerifier[]) is true.
-- Query not attacker(rule_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 88 rules.
400 rules inserted. Base: 344 rules (80 with conclusion selected). Queue: 102 rules.
600 rules inserted. Base: 516 rules (104 with conclusion selected). Queue: 83 rules.
800 rules inserted. Base: 656 rules (114 with conclusion selected). Queue: 92 rules.
1000 rules inserted. Base: 792 rules (131 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 823 rules (149 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 916 rules (160 with conclusion selected). Queue: 165 rules.
1600 rules inserted. Base: 985 rules (170 with conclusion selected). Queue: 148 rules.
1800 rules inserted. Base: 1108 rules (191 with conclusion selected). Queue: 81 rules.
2000 rules inserted. Base: 1171 rules (204 with conclusion selected). Queue: 68 rules.
2200 rules inserted. Base: 1251 rules (212 with conclusion selected). Queue: 79 rules.
2400 rules inserted. Base: 1362 rules (230 with conclusion selected). Queue: 8 rules.
Starting query not attacker(rule_fromVerifier[])
goal reachable: attacker(rule_fromVerifier[])

Derivation:
Abbreviations:
n_p_14 = n_p_2[!1 = @sid]
ssk_14 = ssk_2[!1 = @sid]
ssk_15 = ssk[x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]
n_i_6 = n_i[x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]
n_p_15 = n_p_3[!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)),x_4 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),!1 = @sid]
ssk_16 = ssk_3[!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)),x_4 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),!1 = @sid]
n_v_8 = n_v_4[x_24 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),!1 = @sid_3]
ssk_17 = ssk_10[x_24 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),!1 = @sid_3]
n_c_8 = n_c_4[x_25 = aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),x_24 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),!1 = @sid_3]

1. The message genDID(pk(sk_issuer[]),sk_issuer[]) may be sent to the attacker at output {9}.
attacker(genDID(pk(sk_issuer[]),sk_issuer[])).

2. Using the function attr the attacker may obtain attr.
attacker(attr).

3. The message genDID(pk(sk_prover[]),sk_prover[]) may be sent to the attacker at output {7}.
attacker(genDID(pk(sk_prover[]),sk_prover[])).

4. By 3, the attacker may know genDID(pk(sk_prover[]),sk_prover[]).
By 2, the attacker may know attr.
By 1, the attacker may know genDID(pk(sk_issuer[]),sk_issuer[]).
Using the function makeRule the attacker may obtain makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[])).
attacker(makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))).

5. By 4, the attacker may know makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[])).
Using the function chR the attacker may obtain chR(makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))).
attacker(chR(makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[])))).

6. The message aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])) may be sent to the attacker at output {97}.
attacker(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[]))).

7. The message aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])) that the attacker may have by 6 may be received at input {19}.
So the message aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)) may be sent to the attacker at output {28}.
attacker(aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14))).

8. The message aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)) that the attacker may have by 7 may be received at input {98}.
So the message aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15)) may be sent to the attacker at output {108}.
attacker(aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15))).

9. The message aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])) that the attacker may have by 6 may be received at input {19}.
The message aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15)) that the attacker may have by 8 may be received at input {29}.
So the message aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)) may be sent to the attacker at output {44}.
attacker(aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14))).

10. The message aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)) that the attacker may have by 7 may be received at input {98}.
The message aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)) that the attacker may have by 9 may be received at input {109}.
So the message aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])) may be sent to the attacker at output {122}.
attacker(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[]))).

11. The message aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])) that the attacker may have by 10 may be received at input {405}.
So the message aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)) may be sent to the attacker at output {415}.
attacker(aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16))).

12. The message aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)) that the attacker may have by 7 may be received at input {98}.
The message aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)) that the attacker may have by 9 may be received at input {109}.
The message aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)) that the attacker may have by 11 may be received at input {123}.
So the message aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)) may be sent to the attacker at output {132}.
attacker(aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17))).

13. The message aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])) that the attacker may have by 10 may be received at input {405}.
The message aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)) that the attacker may have by 12 may be received at input {416}.
So the message aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_17),pk(ssk_16)) may be sent to the attacker at output {427}.
attacker(aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_17),pk(ssk_16))).

14. The message aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)) that the attacker may have by 7 may be received at input {98}.
The message aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)) that the attacker may have by 9 may be received at input {109}.
The message aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)) that the attacker may have by 11 may be received at input {123}.
The message aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_17),pk(ssk_16)) that the attacker may have by 13 may be received at input {133}.
So the message aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17)) may be sent to the attacker at output {146}.
attacker(aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17))).

15. The message aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])) that the attacker may have by 10 may be received at input {405}.
The message aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)) that the attacker may have by 12 may be received at input {416}.
The message aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17)) that the attacker may have by 14 may be received at input {428}.
So the message rule_fromVerifier[] may be sent on channel chR(makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))) at output {450}.
mess(chR(makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),rule_fromVerifier[]).

16. By 5, the attacker may have the channel chR(makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))).
By 15, the message rule_fromVerifier[] may be sent on this channel.
So the attacker may obtain the message rule_fromVerifier[] by listening on this channel.
attacker(rule_fromVerifier[]).

17. By 16, attacker(rule_fromVerifier[]).
The goal is reached, represented in the following fact:
attacker(rule_fromVerifier[]).


A more detailed output of the traces is available with
  set traceDisplay = long.

new sk_prover: SecretKey creating sk_prover_1 at {1}

new sk_verifier: SecretKey creating sk_verifier_1 at {2}

new sk_issuer: SecretKey creating sk_issuer_1 at {3}

out(h, ~M) with ~M = pk(sk_issuer_1) at {4}

out(h, ~M_1) with ~M_1 = pk(sk_verifier_1) at {5}

out(h, ~M_2) with ~M_2 = pk(sk_prover_1) at {6}

out(h, ~M_3) with ~M_3 = genDID(pk(sk_prover_1),sk_prover_1) at {7}

out(h, ~M_4) with ~M_4 = genDID(pk(sk_verifier_1),sk_verifier_1) at {8}

out(h, ~M_5) with ~M_5 = genDID(pk(sk_issuer_1),sk_issuer_1) at {9}

new ssk_2: SecretKey creating ssk_14 at {92} in copy a

new n_p_2: bitstring creating n_p_14 at {93} in copy a

out(h, ~M_6) with ~M_6 = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)) at {97} in copy a

in(h, ~M_6) with ~M_6 = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)) at {19} in copy a_1

new ssk: SecretKey creating ssk_15 at {24} in copy a_1

new n_i: bitstring creating n_i_6 at {25} in copy a_1

out(h, ~M_7) with ~M_7 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)) at {28} in copy a_1

in(h, ~M_7) with ~M_7 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)) at {98} in copy a

event auth_HolderSendsLastMessageToIssuer(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15))) at {107} in copy a

out(h, ~M_8) with ~M_8 = aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15)) at {108} in copy a

in(h, ~M_8) with ~M_8 = aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15)) at {29} in copy a_1

event auth_IssuerSendsLastMessageToHolder(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15)),aenc(sign((issueAC(attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1)),ssk_15),pk(ssk_14))) at {43} in copy a_1

out(h, ~M_9) with ~M_9 = aenc(sign((issueAC(attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1)),ssk_15),pk(ssk_14)) at {44} in copy a_1

event auth_IssuerCompletesProtocol(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15))) at {46} in copy a_1

in(h, ~M_9) with ~M_9 = aenc(sign((issueAC(attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1)),ssk_15),pk(ssk_14)) at {109} in copy a

event auth_HolderCompletesProtocol(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15)),aenc(sign((issueAC(attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1)),ssk_15),pk(ssk_14))) at {160} in copy a

new ssk_3: SecretKey creating ssk_16 at {117} in copy a, a_2

new n_p_3: bitstring creating n_p_15 at {118} in copy a, a_2

out(h, ~M_10) with ~M_10 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)) at {122} in copy a, a_2

in(h, ~M_10) with ~M_10 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)) at {405} in copy a_3

new ssk_10: SecretKey creating ssk_17 at {411} in copy a_3

new n_v_4: bitstring creating n_v_8 at {412} in copy a_3

out(h, ~M_11) with ~M_11 = aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)) at {415} in copy a_3

in(h, ~M_11) with ~M_11 = aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)) at {123} in copy a, a_2

out(h, ~M_12) with ~M_12 = aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)) at {132} in copy a, a_2

in(h, ~M_12) with ~M_12 = aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)) at {416} in copy a_3

new n_c_4: bitstring creating n_c_8 at {423} in copy a_3

out(h, ~M_13) with ~M_13 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_17),pk(ssk_16)) at {427} in copy a_3

in(h, ~M_13) with ~M_13 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_17),pk(ssk_16)) at {133} in copy a, a_2

event auth_ProverSendsLastMessageToVerifier(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17))) at {144} in copy a, a_2

event auth_ProverSendsLastMessageToVerifierInProtocolFull(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15)),aenc(sign((issueAC(attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1)),ssk_15),pk(ssk_14)),aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17))) at {145} in copy a, a_2

out(h, ~M_14) with ~M_14 = aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17)) at {146} in copy a, a_2

in(h, ~M_14) with ~M_14 = aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17)) at {428} in copy a_3

new access_token_4: bitstring creating access_token_8 at {441} in copy a_3

event auth_VerifierSendsLastMessageToProver(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17)),aenc(sign(access_token_8,ssk_17),pk(ssk_16))) at {445} in copy a_3

out(h, ~M_15) with ~M_15 = aenc(sign(access_token_8,ssk_17),pk(ssk_16)) at {446} in copy a_3

out(chR(makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))), ~M_16) with ~M_16 = rule_fromVerifier at {450} in copy a_3

event auth_VerifierCompletesProtocol(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17))) at {448} in copy a_3

The attacker has the message ~M_16 = rule_fromVerifier.
A trace has been found.
RESULT not attacker(rule_fromVerifier[]) is false.
-- Query not attacker(credRequest_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 88 rules.
400 rules inserted. Base: 344 rules (80 with conclusion selected). Queue: 102 rules.
600 rules inserted. Base: 516 rules (104 with conclusion selected). Queue: 83 rules.
800 rules inserted. Base: 656 rules (114 with conclusion selected). Queue: 92 rules.
1000 rules inserted. Base: 792 rules (131 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 823 rules (149 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 916 rules (160 with conclusion selected). Queue: 165 rules.
1600 rules inserted. Base: 985 rules (170 with conclusion selected). Queue: 148 rules.
1800 rules inserted. Base: 1108 rules (191 with conclusion selected). Queue: 81 rules.
2000 rules inserted. Base: 1171 rules (204 with conclusion selected). Queue: 68 rules.
2200 rules inserted. Base: 1251 rules (212 with conclusion selected). Queue: 79 rules.
2400 rules inserted. Base: 1362 rules (230 with conclusion selected). Queue: 8 rules.
Starting query not attacker(credRequest_fromVerifier[])
RESULT not attacker(credRequest_fromVerifier[]) is true.
-- Query not attacker(unauth_vp_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 88 rules.
400 rules inserted. Base: 344 rules (80 with conclusion selected). Queue: 102 rules.
600 rules inserted. Base: 516 rules (104 with conclusion selected). Queue: 83 rules.
800 rules inserted. Base: 656 rules (114 with conclusion selected). Queue: 92 rules.
1000 rules inserted. Base: 792 rules (131 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 823 rules (149 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 916 rules (160 with conclusion selected). Queue: 165 rules.
1600 rules inserted. Base: 985 rules (170 with conclusion selected). Queue: 148 rules.
1800 rules inserted. Base: 1108 rules (191 with conclusion selected). Queue: 81 rules.
2000 rules inserted. Base: 1171 rules (204 with conclusion selected). Queue: 68 rules.
2200 rules inserted. Base: 1251 rules (212 with conclusion selected). Queue: 79 rules.
2400 rules inserted. Base: 1362 rules (230 with conclusion selected). Queue: 8 rules.
Starting query not attacker(unauth_vp_fromVerifier[])
RESULT not attacker(unauth_vp_fromVerifier[]) is true.
-- Query not attacker(vp_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 88 rules.
400 rules inserted. Base: 344 rules (80 with conclusion selected). Queue: 102 rules.
600 rules inserted. Base: 516 rules (104 with conclusion selected). Queue: 83 rules.
800 rules inserted. Base: 656 rules (114 with conclusion selected). Queue: 92 rules.
1000 rules inserted. Base: 792 rules (131 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 823 rules (149 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 916 rules (160 with conclusion selected). Queue: 165 rules.
1600 rules inserted. Base: 985 rules (170 with conclusion selected). Queue: 148 rules.
1800 rules inserted. Base: 1108 rules (191 with conclusion selected). Queue: 81 rules.
2000 rules inserted. Base: 1171 rules (204 with conclusion selected). Queue: 68 rules.
2200 rules inserted. Base: 1251 rules (212 with conclusion selected). Queue: 79 rules.
2400 rules inserted. Base: 1362 rules (230 with conclusion selected). Queue: 8 rules.
Starting query not attacker(vp_fromVerifier[])
RESULT not attacker(vp_fromVerifier[]) is true.
-- Query not attacker(cred_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 88 rules.
400 rules inserted. Base: 344 rules (80 with conclusion selected). Queue: 102 rules.
600 rules inserted. Base: 516 rules (104 with conclusion selected). Queue: 83 rules.
800 rules inserted. Base: 656 rules (114 with conclusion selected). Queue: 92 rules.
1000 rules inserted. Base: 792 rules (131 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 823 rules (149 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 916 rules (160 with conclusion selected). Queue: 165 rules.
1600 rules inserted. Base: 985 rules (170 with conclusion selected). Queue: 148 rules.
1800 rules inserted. Base: 1108 rules (191 with conclusion selected). Queue: 81 rules.
2000 rules inserted. Base: 1171 rules (204 with conclusion selected). Queue: 68 rules.
2200 rules inserted. Base: 1251 rules (212 with conclusion selected). Queue: 79 rules.
2400 rules inserted. Base: 1362 rules (230 with conclusion selected). Queue: 8 rules.
Starting query not attacker(cred_fromVerifier[])
RESULT not attacker(cred_fromVerifier[]) is true.
-- Query not attacker(access_token_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 88 rules.
400 rules inserted. Base: 344 rules (80 with conclusion selected). Queue: 102 rules.
600 rules inserted. Base: 516 rules (104 with conclusion selected). Queue: 83 rules.
800 rules inserted. Base: 656 rules (114 with conclusion selected). Queue: 92 rules.
1000 rules inserted. Base: 792 rules (131 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 823 rules (149 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 916 rules (160 with conclusion selected). Queue: 165 rules.
1600 rules inserted. Base: 985 rules (170 with conclusion selected). Queue: 148 rules.
1800 rules inserted. Base: 1108 rules (191 with conclusion selected). Queue: 81 rules.
2000 rules inserted. Base: 1171 rules (204 with conclusion selected). Queue: 68 rules.
2200 rules inserted. Base: 1251 rules (212 with conclusion selected). Queue: 79 rules.
2400 rules inserted. Base: 1362 rules (230 with conclusion selected). Queue: 8 rules.
Starting query not attacker(access_token_fromVerifier[])
RESULT not attacker(access_token_fromVerifier[]) is true.
-- Query inj-event(auth_ProverCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) ==> inj-event(auth_VerifierSendsLastMessageToProver(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 83 rules.
400 rules inserted. Base: 349 rules (80 with conclusion selected). Queue: 115 rules.
600 rules inserted. Base: 510 rules (100 with conclusion selected). Queue: 90 rules.
800 rules inserted. Base: 681 rules (112 with conclusion selected). Queue: 100 rules.
1000 rules inserted. Base: 836 rules (127 with conclusion selected). Queue: 69 rules.
1200 rules inserted. Base: 870 rules (148 with conclusion selected). Queue: 259 rules.
1400 rules inserted. Base: 972 rules (152 with conclusion selected). Queue: 227 rules.
1600 rules inserted. Base: 1051 rules (162 with conclusion selected). Queue: 205 rules.
1800 rules inserted. Base: 1149 rules (170 with conclusion selected). Queue: 189 rules.
2000 rules inserted. Base: 1269 rules (193 with conclusion selected). Queue: 120 rules.
2200 rules inserted. Base: 1366 rules (204 with conclusion selected). Queue: 63 rules.
2400 rules inserted. Base: 1445 rules (212 with conclusion selected). Queue: 38 rules.
2600 rules inserted. Base: 1514 rules (229 with conclusion selected). Queue: 74 rules.
2800 rules inserted. Base: 1643 rules (236 with conclusion selected). Queue: 5 rules.
Starting query inj-event(auth_ProverCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) ==> inj-event(auth_VerifierSendsLastMessageToProver(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken))
goal reachable: end(@occ152_1,auth_ProverCompletesProtocol(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_verifier[])),aenc(sign((n_p_14,n_v_8,pk(ssk_15)),sk_verifier[]),pk(ssk_14)),aenc(sign((n_v_8,uri),ssk_14),pk(ssk_15)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_15),pk(ssk_14)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_14))),ssk_14),pk(ssk_15)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_15),pk(ssk_14))))
Abbreviations:
n_p_15 = n_p_2[!1 = @sid]
ssk_16 = ssk_2[!1 = @sid]
ssk_17 = ssk[x = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
n_i_6 = n_i[x = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
n_p_14 = n_p_3[!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_17),pk(ssk_16)),x_4 = aenc(sign((n_p_15,n_i_6,pk(ssk_17)),sk_issuer[]),pk(ssk_16)),!1 = @sid]
ssk_14 = ssk_3[!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_17),pk(ssk_16)),x_4 = aenc(sign((n_p_15,n_i_6,pk(ssk_17)),sk_issuer[]),pk(ssk_16)),!1 = @sid]
n_v_8 = n_v_7[x_33 = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_verifier[])),!1 = @sid_3]
ssk_15 = ssk_13[x_33 = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_verifier[])),!1 = @sid_3]
n_c_8 = n_c_7[x_34 = aenc(sign((n_v_8,uri),ssk_14),pk(ssk_15)),x_33 = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_verifier[])),!1 = @sid_3]
@occ152_1 = @occ152[x_8 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_15),pk(ssk_14)),x_7 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_15),pk(ssk_14)),x_6 = aenc(sign((n_p_14,n_v_8,pk(ssk_15)),sk_verifier[]),pk(ssk_14)),!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_17),pk(ssk_16)),x_4 = aenc(sign((n_p_15,n_i_6,pk(ssk_17)),sk_issuer[]),pk(ssk_16)),!1 = @sid]

Derivation:
Abbreviations:
n_p_14 = n_p_2[!1 = @sid]
ssk_14 = ssk_2[!1 = @sid]
ssk_15 = ssk[x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]
n_i_6 = n_i[x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]
n_p_15 = n_p_3[!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)),x_4 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),!1 = @sid]
ssk_16 = ssk_3[!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)),x_4 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),!1 = @sid]
n_v_8 = n_v_7[x_33 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),!1 = @sid_3]
ssk_17 = ssk_13[x_33 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),!1 = @sid_3]
n_c_8 = n_c_7[x_34 = aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),x_33 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),!1 = @sid_3]
@occ152_1 = @occ152[x_8 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_17),pk(ssk_16)),x_7 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_17),pk(ssk_16)),x_6 = aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)),!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)),x_4 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),!1 = @sid]


attacker(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[]))).
attacker(aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14))).
attacker(aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15))).
attacker(aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14))).

attacker(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[]))).
attacker(aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16))).
attacker(aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17))).
attacker(aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_17),pk(ssk_16))).



1. The message aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])) may be sent to the attacker at output {97}.
attacker(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[]))).

2. The message aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])) that the attacker may have by 1 may be received at input {19}.
So the message aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)) may be sent to the attacker at output {28}.
attacker(aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14))).

3. The message aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)) that the attacker may have by 2 may be received at input {98}.
So the message aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15)) may be sent to the attacker at output {108}.
attacker(aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15))).

4. The message aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])) that the attacker may have by 1 may be received at input {19}.
The message aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15)) that the attacker may have by 3 may be received at input {29}.
So the message aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)) may be sent to the attacker at output {44}.
attacker(aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14))).

5. The message aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)) that the attacker may have by 2 may be received at input {98}.
The message aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)) that the attacker may have by 4 may be received at input {109}.
So the message aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])) may be sent to the attacker at output {122}.
attacker(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[]))).

6. The message aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])) that the attacker may have by 5 may be received at input {567}.
So the message aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)) may be sent to the attacker at output {577}.
attacker(aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16))).

7. The message aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)) that the attacker may have by 2 may be received at input {98}.
The message aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)) that the attacker may have by 4 may be received at input {109}.
The message aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)) that the attacker may have by 6 may be received at input {123}.
So the message aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)) may be sent to the attacker at output {132}.
attacker(aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17))).

8. The message aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])) that the attacker may have by 5 may be received at input {567}.
The message aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)) that the attacker may have by 7 may be received at input {578}.
So the message aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_17),pk(ssk_16)) may be sent to the attacker at output {589}.
attacker(aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_17),pk(ssk_16))).

9. The message aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)) that the attacker may have by 2 may be received at input {98}.
The message aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)) that the attacker may have by 4 may be received at input {109}.
The message aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)) that the attacker may have by 6 may be received at input {123}.
The message aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_17),pk(ssk_16)) that the attacker may have by 8 may be received at input {133}.
The message aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_17),pk(ssk_16)) that the attacker may have by 8 may be received at input {147}.
So event auth_ProverCompletesProtocol(
    aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),
    aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),
    aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_17),pk(ssk_16)),
    aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17)),
    aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_17),pk(ssk_16))
) may be executed at {152} in session @sid_2.
end(@occ152_1,auth_ProverCompletesProtocol(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_17),pk(ssk_16)))).

10. By 9, end(@occ152_1,auth_ProverCompletesProtocol(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_17),pk(ssk_16)))).
The goal is reached, represented in the following fact:
end(@occ152_1,auth_ProverCompletesProtocol(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent[]),sk_otherAgent[]),attr,genDID(pk(sk_otherAgent[]),sk_otherAgent[]))),ssk_17),pk(ssk_16)))).


A more detailed output of the traces is available with
  set traceDisplay = long.

new sk_prover: SecretKey creating sk_prover_1 at {1}

new sk_verifier: SecretKey creating sk_verifier_1 at {2}

new sk_issuer: SecretKey creating sk_issuer_1 at {3}

out(h, ~M) with ~M = pk(sk_issuer_1) at {4}

out(h, ~M_1) with ~M_1 = pk(sk_verifier_1) at {5}

out(h, ~M_2) with ~M_2 = pk(sk_prover_1) at {6}

out(h, ~M_3) with ~M_3 = genDID(pk(sk_prover_1),sk_prover_1) at {7}

out(h, ~M_4) with ~M_4 = genDID(pk(sk_verifier_1),sk_verifier_1) at {8}

out(h, ~M_5) with ~M_5 = genDID(pk(sk_issuer_1),sk_issuer_1) at {9}

new ssk_2: SecretKey creating ssk_14 at {92} in copy a

new n_p_2: bitstring creating n_p_14 at {93} in copy a

out(h, ~M_6) with ~M_6 = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)) at {97} in copy a

in(h, ~M_6) with ~M_6 = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)) at {19} in copy a_1

new ssk: SecretKey creating ssk_15 at {24} in copy a_1

new n_i: bitstring creating n_i_6 at {25} in copy a_1

out(h, ~M_7) with ~M_7 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)) at {28} in copy a_1

in(h, ~M_7) with ~M_7 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)) at {98} in copy a

event auth_HolderSendsLastMessageToIssuer(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15))) at {107} in copy a

out(h, ~M_8) with ~M_8 = aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15)) at {108} in copy a

in(h, ~M_8) with ~M_8 = aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15)) at {29} in copy a_1

event auth_IssuerSendsLastMessageToHolder(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15)),aenc(sign((issueAC(attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1)),ssk_15),pk(ssk_14))) at {43} in copy a_1

out(h, ~M_9) with ~M_9 = aenc(sign((issueAC(attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1)),ssk_15),pk(ssk_14)) at {44} in copy a_1

event auth_IssuerCompletesProtocol(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15))) at {46} in copy a_1

in(h, ~M_9) with ~M_9 = aenc(sign((issueAC(attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1)),ssk_15),pk(ssk_14)) at {109} in copy a

event auth_HolderCompletesProtocol(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15)),aenc(sign((issueAC(attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1)),ssk_15),pk(ssk_14))) at {160} in copy a

new ssk_3: SecretKey creating ssk_16 at {117} in copy a, a_2

new n_p_3: bitstring creating n_p_15 at {118} in copy a, a_2

out(h, ~M_10) with ~M_10 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)) at {122} in copy a, a_2

in(h, ~M_10) with ~M_10 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)) at {567} in copy a_3

new ssk_13: SecretKey creating ssk_17 at {573} in copy a_3

new n_v_7: bitstring creating n_v_8 at {574} in copy a_3

out(h, ~M_11) with ~M_11 = aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)) at {577} in copy a_3

in(h, ~M_11) with ~M_11 = aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)) at {123} in copy a, a_2

out(h, ~M_12) with ~M_12 = aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)) at {132} in copy a, a_2

in(h, ~M_12) with ~M_12 = aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)) at {578} in copy a_3

new n_c_7: bitstring creating n_c_8 at {585} in copy a_3

out(h, ~M_13) with ~M_13 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent),sk_otherAgent),attr,genDID(pk(sk_otherAgent),sk_otherAgent))),ssk_17),pk(ssk_16)) at {589} in copy a_3

in(h, ~M_13) with ~M_13 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent),sk_otherAgent),attr,genDID(pk(sk_otherAgent),sk_otherAgent))),ssk_17),pk(ssk_16)) at {133} in copy a, a_2

event auth_ProverSendsLastMessageToVerifier(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent),sk_otherAgent),attr,genDID(pk(sk_otherAgent),sk_otherAgent))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17))) at {144} in copy a, a_2

event auth_ProverSendsLastMessageToVerifierInProtocolFull(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15)),aenc(sign((issueAC(attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1)),ssk_15),pk(ssk_14)),aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent),sk_otherAgent),attr,genDID(pk(sk_otherAgent),sk_otherAgent))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17))) at {145} in copy a, a_2

out(h, ~M_14) with ~M_14 = aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17)) at {146} in copy a, a_2

in(h, ~M_13) with ~M_13 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent),sk_otherAgent),attr,genDID(pk(sk_otherAgent),sk_otherAgent))),ssk_17),pk(ssk_16)) at {147} in copy a, a_2

out(chR(makeRule(genDID(pk(sk_otherAgent),sk_otherAgent),attr,genDID(pk(sk_otherAgent),sk_otherAgent))), ~M_15) with ~M_15 = rule_fromProver at {154} in copy a, a_2

event auth_ProverCompletesProtocol(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent),sk_otherAgent),attr,genDID(pk(sk_otherAgent),sk_otherAgent))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent),sk_otherAgent),attr,genDID(pk(sk_otherAgent),sk_otherAgent))),ssk_17),pk(ssk_16))) at {152} in copy a, a_2 (goal)

The event auth_ProverCompletesProtocol(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent),sk_otherAgent),attr,genDID(pk(sk_otherAgent),sk_otherAgent))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_otherAgent),sk_otherAgent),attr,genDID(pk(sk_otherAgent),sk_otherAgent))),ssk_17),pk(ssk_16))) is executed at {152} in copy a, a_2.
A trace has been found.
RESULT inj-event(auth_ProverCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) ==> inj-event(auth_VerifierSendsLastMessageToProver(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) is false.
RESULT (even event(auth_ProverCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) ==> event(auth_VerifierSendsLastMessageToProver(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) is false.)
-- Query inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 85 rules.
400 rules inserted. Base: 349 rules (80 with conclusion selected). Queue: 122 rules.
600 rules inserted. Base: 496 rules (98 with conclusion selected). Queue: 100 rules.
800 rules inserted. Base: 673 rules (112 with conclusion selected). Queue: 110 rules.
1000 rules inserted. Base: 844 rules (125 with conclusion selected). Queue: 73 rules.
1200 rules inserted. Base: 956 rules (148 with conclusion selected). Queue: 287 rules.
1400 rules inserted. Base: 1146 rules (150 with conclusion selected). Queue: 329 rules.
1600 rules inserted. Base: 1307 rules (154 with conclusion selected). Queue: 380 rules.
1800 rules inserted. Base: 1425 rules (162 with conclusion selected). Queue: 380 rules.
2000 rules inserted. Base: 1560 rules (169 with conclusion selected). Queue: 359 rules.
2200 rules inserted. Base: 1706 rules (173 with conclusion selected). Queue: 335 rules.
2400 rules inserted. Base: 1803 rules (200 with conclusion selected). Queue: 288 rules.
2600 rules inserted. Base: 1940 rules (202 with conclusion selected). Queue: 183 rules.
2800 rules inserted. Base: 2082 rules (213 with conclusion selected). Queue: 114 rules.
3000 rules inserted. Base: 2144 rules (216 with conclusion selected). Queue: 93 rules.
3200 rules inserted. Base: 2250 rules (237 with conclusion selected). Queue: 117 rules.
3400 rules inserted. Base: 2324 rules (250 with conclusion selected). Queue: 112 rules.
3600 rules inserted. Base: 2464 rules (257 with conclusion selected). Queue: 128 rules.
3800 rules inserted. Base: 2576 rules (260 with conclusion selected). Queue: 53 rules.
Starting query inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp))
goal reachable: begin(auth_ProverSendsLastMessageToVerifier(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_verifier[])),aenc(sign((n_p_14,n_v_8,pk(ssk_15)),sk_verifier[]),pk(ssk_14)),aenc(sign((n_v_8,uri),ssk_14),pk(ssk_15)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_15),pk(ssk_14)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_14))),ssk_14),pk(ssk_15))),@occ144_1) -> end(@occ448_1,auth_VerifierCompletesProtocol(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_verifier[])),aenc(sign((n_p_14,n_v_8,pk(ssk_15)),sk_verifier[]),pk(ssk_14)),aenc(sign((n_v_8,uri),ssk_14),pk(ssk_15)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_15),pk(ssk_14)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_14))),ssk_14),pk(ssk_15))))
The hypothesis occurs strictly before the conclusion.
Abbreviations:
n_p_15 = n_p_2[!1 = @sid]
ssk_16 = ssk_2[!1 = @sid]
ssk_17 = ssk[x = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
n_i_6 = n_i[x = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
n_p_14 = n_p_3[!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_17),pk(ssk_16)),x_4 = aenc(sign((n_p_15,n_i_6,pk(ssk_17)),sk_issuer[]),pk(ssk_16)),!1 = @sid]
ssk_14 = ssk_3[!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_17),pk(ssk_16)),x_4 = aenc(sign((n_p_15,n_i_6,pk(ssk_17)),sk_issuer[]),pk(ssk_16)),!1 = @sid]
n_v_8 = n_v_4[x_24 = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_verifier[])),!1 = @sid_3]
ssk_15 = ssk_10[x_24 = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_verifier[])),!1 = @sid_3]
n_c_8 = n_c_4[x_25 = aenc(sign((n_v_8,uri),ssk_14),pk(ssk_15)),x_24 = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_verifier[])),!1 = @sid_3]
@occ448_1 = @occ448[x_26 = aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_14))),ssk_14),pk(ssk_15)),x_25 = aenc(sign((n_v_8,uri),ssk_14),pk(ssk_15)),x_24 = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_verifier[])),!1 = @sid_3]
@occ144_1 = @occ144[x_7 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_15),pk(ssk_14)),x_6 = aenc(sign((n_p_14,n_v_8,pk(ssk_15)),sk_verifier[]),pk(ssk_14)),!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_17),pk(ssk_16)),x_4 = aenc(sign((n_p_15,n_i_6,pk(ssk_17)),sk_issuer[]),pk(ssk_16)),!1 = @sid]
RESULT inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) is true.
-- Query inj-event(auth_HolderCompletesProtocol(m_handshakeReq,m_handshakeResp,m_did,m_cred)) ==> inj-event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq,m_handshakeResp,m_did,m_cred)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 85 rules.
400 rules inserted. Base: 354 rules (80 with conclusion selected). Queue: 90 rules.
600 rules inserted. Base: 527 rules (101 with conclusion selected). Queue: 94 rules.
800 rules inserted. Base: 695 rules (115 with conclusion selected). Queue: 91 rules.
1000 rules inserted. Base: 836 rules (134 with conclusion selected). Queue: 64 rules.
1200 rules inserted. Base: 875 rules (152 with conclusion selected). Queue: 209 rules.
1400 rules inserted. Base: 982 rules (163 with conclusion selected). Queue: 167 rules.
1600 rules inserted. Base: 1063 rules (187 with conclusion selected). Queue: 157 rules.
1800 rules inserted. Base: 1195 rules (194 with conclusion selected). Queue: 83 rules.
2000 rules inserted. Base: 1254 rules (204 with conclusion selected). Queue: 69 rules.
2200 rules inserted. Base: 1342 rules (216 with conclusion selected). Queue: 87 rules.
2400 rules inserted. Base: 1418 rules (230 with conclusion selected). Queue: 32 rules.
Starting query inj-event(auth_HolderCompletesProtocol(m_handshakeReq,m_handshakeResp,m_did,m_cred)) ==> inj-event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq,m_handshakeResp,m_did,m_cred))
goal reachable: begin(auth_IssuerSendsLastMessageToHolder(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15)),aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14))),@occ43_1) -> end(@occ160_1,auth_HolderCompletesProtocol(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15)),aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14))))
The hypothesis occurs strictly before the conclusion.
Abbreviations:
n_p_14 = n_p_2[!1 = @sid]
ssk_14 = ssk_2[!1 = @sid]
ssk_15 = ssk[x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]
n_i_6 = n_i[x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]
@occ160_1 = @occ160[x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)),x_4 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),!1 = @sid]
@occ43_1 = @occ43[x_1 = aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15)),x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]
RESULT inj-event(auth_HolderCompletesProtocol(m_handshakeReq,m_handshakeResp,m_did,m_cred)) ==> inj-event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq,m_handshakeResp,m_did,m_cred)) is true.
-- Query inj-event(auth_IssuerCompletesProtocol(m_handshakeReq,m_handshakeResp,m_did)) ==> inj-event(auth_HolderSendsLastMessageToIssuer(m_handshakeReq,m_handshakeResp,m_did)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 84 rules.
400 rules inserted. Base: 353 rules (81 with conclusion selected). Queue: 53 rules.
600 rules inserted. Base: 535 rules (110 with conclusion selected). Queue: 85 rules.
800 rules inserted. Base: 679 rules (119 with conclusion selected). Queue: 80 rules.
1000 rules inserted. Base: 801 rules (138 with conclusion selected). Queue: 74 rules.
1200 rules inserted. Base: 855 rules (155 with conclusion selected). Queue: 134 rules.
1400 rules inserted. Base: 968 rules (177 with conclusion selected). Queue: 127 rules.
1600 rules inserted. Base: 1085 rules (195 with conclusion selected). Queue: 109 rules.
1800 rules inserted. Base: 1179 rules (205 with conclusion selected). Queue: 51 rules.
2000 rules inserted. Base: 1254 rules (216 with conclusion selected). Queue: 90 rules.
2200 rules inserted. Base: 1323 rules (231 with conclusion selected). Queue: 51 rules.
Starting query inj-event(auth_IssuerCompletesProtocol(m_handshakeReq,m_handshakeResp,m_did)) ==> inj-event(auth_HolderSendsLastMessageToIssuer(m_handshakeReq,m_handshakeResp,m_did))
goal reachable: begin(auth_HolderSendsLastMessageToIssuer(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15))),@occ186_1) -> end(@occ46_1,auth_IssuerCompletesProtocol(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15))))
The hypothesis occurs strictly before the conclusion.
Abbreviations:
n_p_14 = n_p_4[!1 = @sid]
ssk_14 = ssk_4[!1 = @sid]
n_i_6 = n_i[x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]
ssk_15 = ssk[x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]
@occ46_1 = @occ46[x_1 = aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15)),x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]
@occ186_1 = @occ186[x_9 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),!1 = @sid]
goal reachable: begin(auth_HolderSendsLastMessageToIssuer(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15))),@occ107_1) -> end(@occ46_1,auth_IssuerCompletesProtocol(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15))))
The hypothesis occurs strictly before the conclusion.
Abbreviations:
n_p_14 = n_p_2[!1 = @sid]
ssk_14 = ssk_2[!1 = @sid]
n_i_6 = n_i[x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]
ssk_15 = ssk[x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]
@occ46_1 = @occ46[x_1 = aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15)),x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]
@occ107_1 = @occ107[x_4 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),!1 = @sid]
RESULT inj-event(auth_IssuerCompletesProtocol(m_handshakeReq,m_handshakeResp,m_did)) ==> inj-event(auth_HolderSendsLastMessageToIssuer(m_handshakeReq,m_handshakeResp,m_did)) is true.
-- Query inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) && inj-event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && inj-event(auth_HolderCompletesProtocol(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 85 rules.
400 rules inserted. Base: 355 rules (80 with conclusion selected). Queue: 96 rules.
600 rules inserted. Base: 508 rules (100 with conclusion selected). Queue: 113 rules.
800 rules inserted. Base: 684 rules (114 with conclusion selected). Queue: 115 rules.
1000 rules inserted. Base: 851 rules (124 with conclusion selected). Queue: 75 rules.
1200 rules inserted. Base: 958 rules (138 with conclusion selected). Queue: 140 rules.
1400 rules inserted. Base: 1144 rules (151 with conclusion selected). Queue: 313 rules.
1600 rules inserted. Base: 1324 rules (156 with conclusion selected). Queue: 390 rules.
1800 rules inserted. Base: 1441 rules (163 with conclusion selected). Queue: 388 rules.
2000 rules inserted. Base: 1566 rules (170 with conclusion selected). Queue: 351 rules.
2200 rules inserted. Base: 1717 rules (174 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1836 rules (201 with conclusion selected). Queue: 293 rules.
2600 rules inserted. Base: 1941 rules (203 with conclusion selected). Queue: 215 rules.
2800 rules inserted. Base: 2084 rules (205 with conclusion selected). Queue: 109 rules.
3000 rules inserted. Base: 2166 rules (215 with conclusion selected). Queue: 97 rules.
3200 rules inserted. Base: 2271 rules (234 with conclusion selected). Queue: 50 rules.
3400 rules inserted. Base: 2353 rules (251 with conclusion selected). Queue: 125 rules.
3600 rules inserted. Base: 2478 rules (257 with conclusion selected). Queue: 135 rules.
3800 rules inserted. Base: 2575 rules (262 with conclusion selected). Queue: 89 rules.
Starting query inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) && inj-event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && inj-event(auth_HolderCompletesProtocol(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred))
goal reachable: begin(auth_ProverSendsLastMessageToVerifier(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_verifier[])),aenc(sign((n_p_14,n_v_8,pk(ssk_15)),sk_verifier[]),pk(ssk_14)),aenc(sign((n_v_8,uri),ssk_14),pk(ssk_15)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_15),pk(ssk_14)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_14))),ssk_14),pk(ssk_15))),@occ144_2) && begin(auth_IssuerSendsLastMessageToHolder(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_issuer[])),aenc(sign((n_p_15,n_i_6,pk(ssk_17)),sk_issuer[]),pk(ssk_16)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17)),aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_17),pk(ssk_16))),@occ43_2) -> end(@occ448_2,auth_VerifierCompletesProtocol(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_verifier[])),aenc(sign((n_p_14,n_v_8,pk(ssk_15)),sk_verifier[]),pk(ssk_14)),aenc(sign((n_v_8,uri),ssk_14),pk(ssk_15)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_15),pk(ssk_14)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_14))),ssk_14),pk(ssk_15))))
Abbreviations:
n_p_15 = n_p_2[!1 = @sid]
ssk_16 = ssk_2[!1 = @sid]
ssk_17 = ssk[x = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
n_i_6 = n_i[x = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
n_p_14 = n_p_3[!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_17),pk(ssk_16)),x_4 = aenc(sign((n_p_15,n_i_6,pk(ssk_17)),sk_issuer[]),pk(ssk_16)),!1 = @sid]
ssk_14 = ssk_3[!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_17),pk(ssk_16)),x_4 = aenc(sign((n_p_15,n_i_6,pk(ssk_17)),sk_issuer[]),pk(ssk_16)),!1 = @sid]
n_v_8 = n_v_4[x_24 = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_verifier[])),!1 = @sid_3]
ssk_15 = ssk_10[x_24 = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_verifier[])),!1 = @sid_3]
n_c_8 = n_c_4[x_25 = aenc(sign((n_v_8,uri),ssk_14),pk(ssk_15)),x_24 = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_verifier[])),!1 = @sid_3]
@occ448_2 = @occ448_1[x_26 = aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_14))),ssk_14),pk(ssk_15)),x_25 = aenc(sign((n_v_8,uri),ssk_14),pk(ssk_15)),x_24 = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_verifier[])),!1 = @sid_3]
@occ144_2 = @occ144_1[x_7 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_15),pk(ssk_14)),x_6 = aenc(sign((n_p_14,n_v_8,pk(ssk_15)),sk_verifier[]),pk(ssk_14)),!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_17),pk(ssk_16)),x_4 = aenc(sign((n_p_15,n_i_6,pk(ssk_17)),sk_issuer[]),pk(ssk_16)),!1 = @sid]
@occ43_2 = @occ43_1[x_1 = aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17)),x = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]

Derivation:
Abbreviations:
n_p_14 = n_p_2[!1 = @sid]
ssk_14 = ssk_2[!1 = @sid]
ssk_15 = ssk[x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]
n_i_6 = n_i[x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]
n_p_15 = n_p_3[!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)),x_4 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),!1 = @sid]
ssk_16 = ssk_3[!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)),x_4 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),!1 = @sid]
n_v_8 = n_v_4[x_24 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),!1 = @sid_3]
ssk_17 = ssk_10[x_24 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),!1 = @sid_3]
n_c_8 = n_c_4[x_25 = aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),x_24 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),!1 = @sid_3]
@occ448_2 = @occ448_1[x_26 = aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17)),x_25 = aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),x_24 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),!1 = @sid_3]
@occ144_2 = @occ144_1[x_7 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_17),pk(ssk_16)),x_6 = aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)),!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)),x_4 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),!1 = @sid]
@occ43_2 = @occ43_1[x_1 = aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15)),x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]

1. The message aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])) may be sent to the attacker at output {97}.
attacker(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[]))).

2. The message aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])) that the attacker may have by 1 may be received at input {19}.
So the message aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)) may be sent to the attacker at output {28}.
attacker(aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14))).

3. The message aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)) that the attacker may have by 2 may be received at input {98}.
So the message aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15)) may be sent to the attacker at output {108}.
attacker(aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15))).

4. The message aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])) that the attacker may have by 1 may be received at input {19}.
The message aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15)) that the attacker may have by 3 may be received at input {29}.
The event auth_IssuerSendsLastMessageToHolder(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15)),aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14))) (with occurrence name @occ43_2) may be executed at {43}.
So the message aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)) may be sent to the attacker at output {44}.
attacker(aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14))).

5. The message aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)) that the attacker may have by 2 may be received at input {98}.
The message aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)) that the attacker may have by 4 may be received at input {109}.
So the message aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])) may be sent to the attacker at output {122}.
attacker(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[]))).

6. The message aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])) that the attacker may have by 5 may be received at input {405}.
So the message aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)) may be sent to the attacker at output {415}.
attacker(aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16))).

7. The message aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)) that the attacker may have by 2 may be received at input {98}.
The message aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)) that the attacker may have by 4 may be received at input {109}.
The message aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)) that the attacker may have by 6 may be received at input {123}.
So the message aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)) may be sent to the attacker at output {132}.
attacker(aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17))).

8. The message aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])) that the attacker may have by 5 may be received at input {405}.
The message aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)) that the attacker may have by 7 may be received at input {416}.
So the message aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_17),pk(ssk_16)) may be sent to the attacker at output {427}.
attacker(aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_17),pk(ssk_16))).

9. The message aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)) that the attacker may have by 2 may be received at input {98}.
The message aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)) that the attacker may have by 4 may be received at input {109}.
The message aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)) that the attacker may have by 6 may be received at input {123}.
The message aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_17),pk(ssk_16)) that the attacker may have by 8 may be received at input {133}.
The event auth_ProverSendsLastMessageToVerifier(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17))) (with occurrence name @occ144_2) may be executed at {144}.
So the message aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17)) may be sent to the attacker at output {146}.
attacker(aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17))).

10. The message aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])) that the attacker may have by 5 may be received at input {405}.
The message aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)) that the attacker may have by 7 may be received at input {416}.
The message aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17)) that the attacker may have by 9 may be received at input {428}.
So event auth_VerifierCompletesProtocol(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17))) may be executed at {448} in session @sid_3.
end(@occ448_2,auth_VerifierCompletesProtocol(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17)))).

11. By 10, end(@occ448_2,auth_VerifierCompletesProtocol(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17)))).
The goal is reached, represented in the following fact:
end(@occ448_2,auth_VerifierCompletesProtocol(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17)))).


A more detailed output of the traces is available with
  set traceDisplay = long.

new sk_prover: SecretKey creating sk_prover_1 at {1}

new sk_verifier: SecretKey creating sk_verifier_1 at {2}

new sk_issuer: SecretKey creating sk_issuer_1 at {3}

out(h, ~M) with ~M = pk(sk_issuer_1) at {4}

out(h, ~M_1) with ~M_1 = pk(sk_verifier_1) at {5}

out(h, ~M_2) with ~M_2 = pk(sk_prover_1) at {6}

out(h, ~M_3) with ~M_3 = genDID(pk(sk_prover_1),sk_prover_1) at {7}

out(h, ~M_4) with ~M_4 = genDID(pk(sk_verifier_1),sk_verifier_1) at {8}

out(h, ~M_5) with ~M_5 = genDID(pk(sk_issuer_1),sk_issuer_1) at {9}

new ssk_2: SecretKey creating ssk_14 at {92} in copy a

new n_p_2: bitstring creating n_p_14 at {93} in copy a

out(h, ~M_6) with ~M_6 = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)) at {97} in copy a

in(h, ~M_6) with ~M_6 = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)) at {19} in copy a_1

new ssk: SecretKey creating ssk_15 at {24} in copy a_1

new n_i: bitstring creating n_i_6 at {25} in copy a_1

out(h, ~M_7) with ~M_7 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)) at {28} in copy a_1

in(h, ~M_7) with ~M_7 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)) at {98} in copy a

event auth_HolderSendsLastMessageToIssuer(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15))) at {107} in copy a

out(h, ~M_8) with ~M_8 = aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15)) at {108} in copy a

in(h, ~M_8) with ~M_8 = aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15)) at {29} in copy a_1

event auth_IssuerSendsLastMessageToHolder(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15)),aenc(sign((issueAC(attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1)),ssk_15),pk(ssk_14))) at {43} in copy a_1

out(h, ~M_9) with ~M_9 = aenc(sign((issueAC(attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1)),ssk_15),pk(ssk_14)) at {44} in copy a_1

event auth_IssuerCompletesProtocol(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15))) at {46} in copy a_1

in(h, ~M_9) with ~M_9 = aenc(sign((issueAC(attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1)),ssk_15),pk(ssk_14)) at {109} in copy a

new ssk_3: SecretKey creating ssk_16 at {117} in copy a, a_2

new n_p_3: bitstring creating n_p_15 at {118} in copy a, a_2

out(h, ~M_10) with ~M_10 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)) at {122} in copy a, a_2

in(h, ~M_10) with ~M_10 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)) at {405} in copy a_3

new ssk_10: SecretKey creating ssk_17 at {411} in copy a_3

new n_v_4: bitstring creating n_v_8 at {412} in copy a_3

out(h, ~M_11) with ~M_11 = aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)) at {415} in copy a_3

in(h, ~M_11) with ~M_11 = aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)) at {123} in copy a, a_2

out(h, ~M_12) with ~M_12 = aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)) at {132} in copy a, a_2

in(h, ~M_12) with ~M_12 = aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)) at {416} in copy a_3

new n_c_4: bitstring creating n_c_8 at {423} in copy a_3

out(h, ~M_13) with ~M_13 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_17),pk(ssk_16)) at {427} in copy a_3

in(h, ~M_13) with ~M_13 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_17),pk(ssk_16)) at {133} in copy a, a_2

event auth_ProverSendsLastMessageToVerifier(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17))) at {144} in copy a, a_2

event auth_ProverSendsLastMessageToVerifierInProtocolFull(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer_1)),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer_1),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_14),pk(ssk_15)),aenc(sign((issueAC(attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1)),ssk_15),pk(ssk_14)),aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17))) at {145} in copy a, a_2

out(h, ~M_14) with ~M_14 = aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17)) at {146} in copy a, a_2

in(h, ~M_14) with ~M_14 = aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17)) at {428} in copy a_3

new access_token_4: bitstring creating access_token_8 at {441} in copy a_3

event auth_VerifierSendsLastMessageToProver(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17)),aenc(sign(access_token_8,ssk_17),pk(ssk_16))) at {445} in copy a_3

out(h, ~M_15) with ~M_15 = aenc(sign(access_token_8,ssk_17),pk(ssk_16)) at {446} in copy a_3

event auth_VerifierCompletesProtocol(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17))) at {448} in copy a_3 (goal)

The event auth_VerifierCompletesProtocol(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier_1)),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier_1),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer_1),pk(sk_issuer_1),(n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),n_p_15))),ssk_16),pk(ssk_17))) is executed at {448} in copy a_3.
A trace has been found.
RESULT inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) && inj-event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && inj-event(auth_HolderCompletesProtocol(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) is false.
RESULT (even event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) && event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && event(auth_HolderCompletesProtocol(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) is false.)
-- Query event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && event(auth_ProverSendsLastMessageToVerifierInProtocolFull(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred,m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 197 rules (48 with conclusion selected). Queue: 85 rules.
400 rules inserted. Base: 355 rules (80 with conclusion selected). Queue: 61 rules.
600 rules inserted. Base: 530 rules (108 with conclusion selected). Queue: 80 rules.
800 rules inserted. Base: 690 rules (116 with conclusion selected). Queue: 67 rules.
1000 rules inserted. Base: 788 rules (140 with conclusion selected). Queue: 145 rules.
1200 rules inserted. Base: 954 rules (152 with conclusion selected). Queue: 191 rules.
1400 rules inserted. Base: 1086 rules (164 with conclusion selected). Queue: 239 rules.
1600 rules inserted. Base: 1201 rules (192 with conclusion selected). Queue: 213 rules.
1800 rules inserted. Base: 1332 rules (204 with conclusion selected). Queue: 160 rules.
2000 rules inserted. Base: 1453 rules (205 with conclusion selected). Queue: 80 rules.
2200 rules inserted. Base: 1509 rules (222 with conclusion selected). Queue: 68 rules.
2400 rules inserted. Base: 1593 rules (230 with conclusion selected). Queue: 96 rules.
2600 rules inserted. Base: 1704 rules (246 with conclusion selected). Queue: 42 rules.
Starting query event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && event(auth_ProverSendsLastMessageToVerifierInProtocolFull(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred,m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp))
goal reachable: begin(auth_ProverSendsLastMessageToVerifierInProtocolFull(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15)),aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)),aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17)))) && begin(auth_IssuerSendsLastMessageToHolder(aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),aenc(sign(sign((n_i_6,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_14),pk(ssk_15)),aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)))) -> end(auth_VerifierCompletesProtocol(aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),aenc(sign((n_p_15,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_17),pk(ssk_16)),aenc(sign(encodeDC(proofGen(issueAC(attr,sk_issuer[]),pk(sk_issuer[]),(n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),n_p_15))),ssk_16),pk(ssk_17))))
Abbreviations:
n_p_14 = n_p_2[!1 = @sid]
ssk_14 = ssk_2[!1 = @sid]
ssk_15 = ssk[x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]
n_i_6 = n_i[x = aenc(sign((n_p_14,pk(ssk_14)),ssk_14),pk(sk_issuer[])),!1 = @sid_1]
n_p_15 = n_p_3[!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)),x_4 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),!1 = @sid]
ssk_16 = ssk_3[!2 = @sid_2,x_5 = aenc(sign((issueAC(attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[])),ssk_15),pk(ssk_14)),x_4 = aenc(sign((n_p_14,n_i_6,pk(ssk_15)),sk_issuer[]),pk(ssk_14)),!1 = @sid]
n_v_8 = n_v_4[x_24 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),!1 = @sid_3]
ssk_17 = ssk_10[x_24 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),!1 = @sid_3]
n_c_8 = n_c_4[x_25 = aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),x_24 = aenc(sign((n_p_15,pk(ssk_16)),ssk_16),pk(sk_verifier[])),!1 = @sid_3]
RESULT event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && event(auth_ProverSendsLastMessageToVerifierInProtocolFull(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred,m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) is true.

--------------------------------------------------------------
Verification summary:

Query not attacker(n_p_fromHolder[]) is true.

Query not attacker(n_i_fromHolder[]) is true.

Query not attacker(providingDID_fromHolder[]) is true.

Query not attacker(n_p_fromIssuer[]) is true.

Query not attacker(credIssuing_fromIssuer_notMeaningful[]) is true.

Query not attacker(n_p_fromProver[]) is true.

Query not attacker(unsigned_vp_fromProver[]) is true.

Query not attacker(vp_fromProver[]) is true.

Query not attacker(cred_fromProver[]) is true.

Query not attacker(access_token_fromProver[]) is true.

Query not attacker(n_p_fromVerifier[]) is true.

Query not attacker(rule_fromVerifier[]) is false.

Query not attacker(credRequest_fromVerifier[]) is true.

Query not attacker(unauth_vp_fromVerifier[]) is true.

Query not attacker(vp_fromVerifier[]) is true.

Query not attacker(cred_fromVerifier[]) is true.

Query not attacker(access_token_fromVerifier[]) is true.

Query inj-event(auth_ProverCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) ==> inj-event(auth_VerifierSendsLastMessageToProver(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) is false.

Query inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) is true.

Query inj-event(auth_HolderCompletesProtocol(m_handshakeReq,m_handshakeResp,m_did,m_cred)) ==> inj-event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq,m_handshakeResp,m_did,m_cred)) is true.

Query inj-event(auth_IssuerCompletesProtocol(m_handshakeReq,m_handshakeResp,m_did)) ==> inj-event(auth_HolderSendsLastMessageToIssuer(m_handshakeReq,m_handshakeResp,m_did)) is true.

Query inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) && inj-event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && inj-event(auth_HolderCompletesProtocol(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) is false.

Query event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && event(auth_ProverSendsLastMessageToVerifierInProtocolFull(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred,m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) is true.

--------------------------------------------------------------

