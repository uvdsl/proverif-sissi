$ pk(sk) ... ? $ \\
$ getPubKey(DID) ... ? $ \\
$ \textit{dec}(\{m\}_{pk},pk) = m $ \\
$ \textit{verif}(\textit{sig}(m)) = m $ \\



Issuer Setup
$ \textit{let } pk_P := \textit{getPubKey}(proj_{1}(m'_{2})) \textit{ in}  $ \\ 

Holder Setup
$ \textit{let } pk_I := \textit{getPubKey}(I) \textit{ in}  $ \\ 
$ \textit{let } pk_V := \textit{getPubKey}(V) \textit{ in}  $ \\ 

Verifier Setup
$ \textit{let } pk_P := \textit{getPubKey}(P') \textit{ in}  $ \\ 
$ \textit{let } pk_I = \textit{getPubKey}(proj_{2}({\textit{VC}\,'})  $ \\ 









Issuer (I, sk_I, \textit{attr}, P, pk_P)  $ \\ 
$ \textit{ch}(m_{0});  $ \\ 
$ \textit{let } m'_{0} := \textit{dec}(m_{0},sk_I) \textit{ in}  $ \\ 
$ \textit{let } (n_p,spk_{PI}) := \textit{verif}(m'_{0},proj_{1}(m'_{0})) \textit{ in}  $ \\ 
$ \textit{new } ssk_I, n_i;  $ \\ 
$ \textit{let } m'_{1} := (n_p,n_i,pk(ssk_I)) \textit{ in}  $ \\ 
$ \textit{let } m_{1} := \{\textit{sig}(m'_{1},sk_I)\}_{spk_{PI}} \textit{ in}  $ \\ 
$ \overline{\textit{ch}}(m_{1});  $ \\ 
$ \textit{ch}(m_{2});  $ \\ 
$ \textit{let } m'_{2} := \textit{verif}(\textit{dec}(m_{2},ssk_I),spk_{PI}) \textit{ in}  $ \\ 
$ \textit{let } (n'_i,P',I') := \textit{verif}(m'_{2},pk_P) \textit{ in}  $ \\ 
$ \textit{if } (n'_i,P',I') = (n_i,P,I) \textit{ then}  $ \\ 
$ \textit{let } {\textit{VC}} := \textit{sig}((P, \textit{attr},I), sk_I) \textit{ in}  $ \\ 
$ \textit{let } m'_{3} := ({\textit{VC}},P) \textit{ in}  $ \\ 
$ \textit{let } m_{3} := \{\textit{sig}(m'_{3},ssk_I\})_{spk_{PI}} \textit{ in}  $ \\ 
$ \overline{\textit{ch}}(m_{3});  $ \\ 
$
$Holder (P, sk_P, I, pk_I, V, pk_V)  $ \\ 
$ \textit{new } ssk_{PI}, n_p;  $ \\ 
$ \textit{let } m'_{0} := (n_p,pk(ssk_{PI})) \textit{ in}  $ \\ 
$ \textit{let } m_{0} := \{\textit{sig}(m'_{0},ssk_{PI})\}_{pk_I} \textit{ in}  $ \\ 
$ \overline{\textit{ch}}(m_{0});  $ \\ 
$ \textit{ch}(m_{1});  $ \\ 
$ \textit{let } (n'_p,n_i,spk_I) := \textit{verif}(\textit{dec}(m_{1},ssk_{PI}),pk_I) \textit{ in}  $ \\ 
$ \textit{if } n'_p = n_p \textit{ then}  $ \\ 
$ \textit{let } m'_{2} := \textit{sig}((n_i,P,I),sk_P) \textit{ in}  $ \\ 
$ \textit{let } m_{2} := \{\textit{sig}(m'_{2},ssk_{PI})\}_{spk_I} \textit{ in}  $ \\ 
$ \overline{\textit{ch}}(m_{2});  $ \\ 
$ \textit{ch}(m_{3})  $ \\ 
$ \textit{let } ({\textit{VC}}, P') := \textit{verif}(\textit{dec}(m_{3},ssk_{PI}),spk_I) \textit{ in}  $ \\ 
$ \textit{if } P' = P \textit{ then}  $ \\ 
$ \textit{if } proj_{2}({\textit{VC}}) = I \textit{ then}  $ \\ 
$  
$ !Prover (P, sk_P, {\textit{VC}=sig((P,attr,I),sk_I)}, V, pk_V)  $ \\ 
$ \textit{new } ssk_{PV}, n_p;  $ \\ 
$ \textit{let } m'_{4} := (n_p,pk(ssk_{PV})) \textit{ in}  $ \\ 
$ \textit{let } m_{4} := \{\textit{sig}(m'_{4},ssk_{PV})\}_{pk_V} \textit{ in}  $ \\ 
$ \overline{\textit{ch}}(m_{4});  $ \\ 
$ \textit{ch}(m_{5});  $ \\ 
$ \textit{let } m'_{5} := \textit{verif}(\textit{dec}(m_{5},ssk_{PV}),pk_V) \textit{ in}  $ \\ 
$ \textit{let } (n'_p,n_v,spk_V) := m'_{5} \textit{ in}  $ \\ 
$ \textit{if } n'_p := n_p \textit{ then}  $ \\ 
$ \textit{let } m'_{6} := (n_v, {\textit{URI}}) \textit{ in}  $ \\ 
$ \textit{let } m_{6} := \{\textit{sig}(m'_{6},ssk_{PV})\}_{spk_V} \textit{ in}  $ \\ 
$ \overline{\textit{ch}}(m_{6})  $ \\ 
$ \textit{ch}(m_{7});  $ \\ 
$ \textit{let } (n_c, {\textit{RULE}}) := \textit{verif}(\textit{dec}(m_{7},ssk_{PV}),spk_V) \textit{ in}  $ \\ 
$ \textit{if } proj_{0}({\textit{VC}}) = proj_{0}({\textit{RULE}}) \textit{ then}  $ \\ 
$ \textit{if } proj_{1}({\textit{VC}}) = proj_{1}({\textit{RULE}}) \textit{ then}  $ \\ 
$ \textit{if } proj_{2}({\textit{VC}}) = proj_{2}({\textit{RULE}}) \textit{ then}  $ \\  
$ \textit{let } {\textit{VP}} := \textit{sig}((n_c,V,{\textit{VC}}),sk_P) \textit{ in}  $ \\ 
$ \textit{let } m_{8} := \{\textit{sig}({\textit{VP}},ssk_{PV})\}_{spk_V} \textit{ in}  $ \\ 
$ \overline{\textit{ch}}(m_{8})  $ \\ 
$ \textit{ch}(m_{9})  $ \\ 
$ \textit{let } m'_{9} := \textit{verif}(\textit{dec}(m_{9},ssk),spk_V) \textit{ in}  $ \\ 
$ \textit{let } \textit{tkn}_\textit{access} = \textit{verif}(m'_{9}, pk_V) \textit{ in}  $ \\ 


$
$Verifier (V, sk_V, {\textit{RULE}=(P,attr,I)}, pk_P, pk_I, {\textit{URI}})  $ \\ 
$ \textit{ch}(m_{4});  $ \\ 
$ \textit{let } m'_{4} := \textit{dec}(m_{4},sk_V) \textit{ in}  $ \\ 
$ \textit{let } (n_p,spk_{PV}) := \textit{verif}(m'_{4},proj_{1}(m'_{4})) \textit{ in}  $ \\ 
$ \textit{new } ssk_V, n_i;  $ \\ 
$ \textit{let } m'_{5} := (n_p,n_i,pk(ssk_V)) \textit{ in}  $ \\ 
$ \textit{let } m_{5} := \{\textit{sig}(m'_{5},sk_V)\}_{spk_{PV}} \textit{ in}  $ \\ 
$ \overline{\textit{ch}}(m_{5});  $ \\ 
$ \textit{ch}(m_{6});  $ \\ 
$ \textit{let } (n'_v,{\textit{URI}\,'}) := \textit{verif}(\textit{dec}(m_{6},ssk_V),spk_{PV}) \textit{ in}  $ \\ 
$ \textit{if } n'_v = n_v \textit{ then}  $ \\ 
$ \textit{if } {\textit{URI}\,'} = {\textit{URI}} \textit{ then}  $ \\ 
$ \textit{new } n_c;  $ \\ 
$ \textit{let } m'_{7} := (n_c,{\textit{RULE}}) \textit{ in}  $ \\ 
$ \textit{let } m_{7} := \{\textit{sig}(m'_{7},ssk_V)\}_{spk_{PV}} \textit{ in}  $ \\ 
$ \overline{\textit{ch}}(m_{7}));  $ \\ 
$ \textit{ch}(m_{8});  $ \\ 
$ \textit{let } m'_{8} := \textit{verif}(\textit{dec}(m_{8},ssk_V),spk_{PV}) \textit{ in}  $ \\ 
$ \textit{let } \textit{VP}\,' := \textit{verif}(m'_8,pk_P) \textit{ in}  $ \\ 
$ \textit{let } \textit{VC}\,' = \textit{verif}(proj_2({\textit{VP}\,'}),pk_I) \textit{ in}  $ \\
$ \textit{if } proj_{0}({\textit{VP}\,'}) = n'_c \textit{ then}  $ \\ 
$ \textit{if } proj_{1}({\textit{VP}\,'}) = V' \textit{ then}  $ \\ 
$ \textit{if } proj_{0}({\textit{VC}\,'}) = proj_{0}({\textit{RULE}}) \textit{ then}  $ \\ 
$ \textit{if } proj_{1}({\textit{VC}\,'}) = proj_{1}({\textit{RULE}}) \textit{ then}  $ \\ 
$ \textit{if } proj_{2}({\textit{VC}\,'}) = proj_{2}({\textit{RULE}}) \textit{ then}  $ \\  
$ \textit{new } \textit{tkn}_\textit{access};  $ \\ 
$ \textit{let } m'_{9} = \textit{sig}(\textit{tkn}_\textit{access},sk_V) \textit{ in}  $ \\ 
$ \textit{let } m_{9} = \{\textit{sig}(m'_{9},ssk_V)\}_{spk_{PV}} \textit{ in}  $ \\ 
$ \overline{\textit{ch}}(m_{9}); $ \\










    
$    \textit{const } \textit{attr}, \textit{URI};   $ \\
$    \textit{new } sk_I, sk_P, sk_V, sk_E;    $ \\
$    \overline{ch}((I, pk(sk_I), P, pk(sk_P), V, pk(sk_V)), E, sk_E)    $ \\
$    \textit{let } \textit{RULE} = makeRule(  P,   attr,   I  ) \textit{ in}     $ \\
$    \textit{let } {\textit{RULE}_\textit{EI}} = (  E,   attr,   I  ) \textit{ in}  $ \\
$    \textit{let } {\textit{RULE}_\textit{PE}} = (  P,   attr,   E  ) \textit{ in}  $ \\
$    \textit{let } {\textit{RULE}_\textit{EE}}= ( E,   attr,   E )  \textit{ in}  $ \\
$    ( (    $ \\
$        !Issuer(I, sk_I, \textit{attr}, P, pk_P)    |      $ \\
$        !Issuer(I, sk_I, \textit{attr}, E, pk_E)    |  $ \\
$        !Holder(P, sk_P, I, pk_I, V, pk_V)          |  $ \\
$        !Holder(P, sk_P, I, pk_I, E, pk_E)          |  $ \\
$        !Holder(P, sk_P, E, pk_E, V, pk_V)          |  $ \\
$        !Holder(P, sk_P, E, pk_E, E, pk_E)          |  $ \\
$        !Verifier(V, sk_V, {\textit{RULE}}, pk_P, pk_I, {\textit{URI}})     |    $ \\
$        !Verifier(V, sk_V, {\textit{RULE}_\textit{EI}}, pk_E, pk_I, {\textit{URI}})   |    $ \\
$        !Verifier(V, sk_V, {\textit{RULE}_\textit{PE}}, pk_P, pk_E, {\textit{URI}})   |    $ \\
$        !Verifier(V, sk_V, {\textit{RULE}_\textit{EE}}, pk_E, pk_E, {\textit{URI}})    $ \\
$    ) )    $ \\